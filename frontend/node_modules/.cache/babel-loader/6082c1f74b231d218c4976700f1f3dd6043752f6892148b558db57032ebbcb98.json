{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Business\\\\Wabi\\\\FSD-A2\\\\frontend\\\\src\\\\pages\\\\IndividualProductPage.js\",\n  _s = $RefreshSig$();\n// Import necessary modules and components\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\nimport { CartContext } from \"../context/CartContext\";\nimport ReviewForm from \"../components/ReviewForm\";\nimport ReviewList from \"../components/ReviewList\";\n\n// IndividualProduct component definition\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IndividualProduct = () => {\n  _s();\n  // State variables\n  const {\n    productId\n  } = useParams(); // Get the product ID from URL params\n  const [product, setProduct] = useState(null); // State for product data\n  const [reviewContent, setReviewContent] = useState(\"\"); // State for review content\n  const [message, setMessage] = useState(\"\"); // State for messages\n  const [rating, setRating] = useState(0); // State for rating\n  const [remainingChars, setRemainingChars] = useState(100); // State for remaining characters in review\n  const [isReviewFormVisible, setIsReviewFormVisible] = useState(false); // State for review form visibility\n  const [reviews, setReviews] = useState([]); // State for product reviews\n  const [areReviewsVisible, setAreReviewsVisible] = useState(false); // State for reviews visibility\n  const {\n    user\n  } = useContext(UserContext); // User context\n  const isLoggedIn = Boolean(user); // Check if user is logged in\n  const [hasUserReviewed, setHasUserReviewed] = useState(false); // State for user review status\n  const [refreshReviews, setRefreshReviews] = useState(false); // State to trigger review refresh\n  const [editingReview, setEditingReview] = useState(null); // State for editing review\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State for error messages\n  const [successMessage, setSuccessMessage] = useState(\"\"); // State for success messages\n  const [initialReviewContent, setInitialReviewContent] = useState(\"\"); // State for initial review content\n\n  // Cart context\n  const {\n    cart,\n    addToCart,\n    decreaseQuantity,\n    increaseQuantity\n  } = useContext(CartContext);\n\n  // Function to get product quantity from cart\n  const getProductQuantity = productId => {\n    let quantity = 0;\n    if (cart && cart.cartLines) {\n      cart.cartLines.forEach(cartLine => {\n        if (cartLine.productId === productId) {\n          quantity = cartLine.quantity;\n        }\n      });\n    }\n    return quantity;\n  };\n\n  // Function to handle edit button click\n  const handleEditButtonClick = review => {\n    setEditingReview(review);\n    setReviewContent(review.content);\n    setRating(review.rating);\n    setIsReviewFormVisible(true);\n    setInitialReviewContent(review.content);\n  };\n\n  // Function to handle cancel review\n  const handleCancelReview = () => {\n    setIsReviewFormVisible(false);\n    setRating(0);\n    setReviewContent(\"\");\n    setRemainingChars(100);\n    setEditingReview(null);\n  };\n\n  // Function to handle review content change\n  const handleReviewContentChange = e => {\n    setReviewContent(e.target.value);\n    setRemainingChars(100 - e.target.value.length);\n  };\n\n  // Function to toggle reviews visibility\n  const toggleReviewsVisibility = () => {\n    setAreReviewsVisible(!areReviewsVisible);\n  };\n\n  // Function to toggle review form visibility\n  const toggleReviewFormVisibility = () => {\n    setIsReviewFormVisible(!isReviewFormVisible);\n  };\n\n  // Fetch product data\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/api/product/select/${productId}`);\n        setProduct(response.data); // Set product data from response\n      } catch (error) {\n        console.error(\"Error fetching product:\", error); // Log error if fetching product fails\n      }\n    };\n    fetchProduct(); // Call fetchProduct function\n  }, [productId]); // Execute effect when productId changes\n\n  // Fetch reviews data\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const response = await axios.get(`http://localhost:4000/api/review/product/${productId}`);\n      setReviews(response.data); // Set reviews data from response\n\n      if (user) {\n        const userReview = response.data.find(review => review.userId === user.userId);\n        setHasUserReviewed(Boolean(userReview)); // Set user review status\n      }\n      setRefreshReviews(false);\n    };\n    fetchReviews(); // Call fetchReviews function\n  }, [productId, user, refreshReviews]); // Execute effect when productId, user, or refreshReviews changes\n\n  // Function to handle review submission\n  const handleReviewSubmit = async (e, reviewId) => {\n    e.preventDefault();\n    if (!user) {\n      console.log(\"You must be logged in to leave a review\");\n      return;\n    }\n\n    // Check if reviewContent is empty\n    if (!reviewContent.trim()) {\n      setErrorMessage(\"Review can't be empty.\");\n      return;\n    }\n\n    // Check if reviewContent is the same as the initial review content\n    if (editingReview && reviewContent === initialReviewContent) {\n      setErrorMessage(\"No changes were made to the review\");\n      //Timeout error message after 2 seconds\n      setTimeout(() => {\n        setErrorMessage(\"\");\n      }, 1500);\n      return;\n    }\n    try {\n      if (editingReview) {\n        const response = await axios.put(`http://localhost:4000/api/review/${reviewId}`, {\n          content: reviewContent,\n          rating\n        });\n        if (response.status === 200) {\n          setReviews(prevReviews => prevReviews.map(review => review.reviewId === editingReview.reviewId ? {\n            ...review,\n            content: reviewContent,\n            rating\n          } : review));\n          setEditingReview(null);\n          setSuccessMessage(\"Review successfully updated.\");\n          // Clear the success message after 2 seconds\n          setTimeout(() => {\n            setSuccessMessage(\"\");\n          }, 2000);\n        } else {\n          console.error(\"Error updating review:\", response);\n        }\n      } else {\n        const response = await axios.post(\"http://localhost:4000/api/review\", {\n          productId,\n          userId: user.userId,\n          content: reviewContent,\n          rating,\n          reviewerName: user.username\n        });\n        if (response.status === 200) {\n          const newReview = {\n            productId,\n            userId: user.userId,\n            content: reviewContent,\n            rating,\n            reviewerName: user.username\n          };\n          setReviews(prevReviews => [...prevReviews, newReview]);\n          setHasUserReviewed(true);\n        } else {\n          console.error(\"Error saving review:\", response);\n        }\n      }\n      //Clear review form and errors\n      setErrorMessage(\"\");\n      setRating(0);\n      setReviewContent(\"\");\n      setRemainingChars(100);\n      setIsReviewFormVisible(false);\n      setRefreshReviews(true);\n    } catch (error) {\n      console.error(\"Error saving review:\", error);\n    }\n  };\n  const handleDeleteReview = async reviewId => {\n    if (window.confirm(\"Are you sure you want to delete this review?\")) {\n      try {\n        const response = await axios.delete(`http://localhost:4000/api/review/${reviewId}`);\n        if (response.status === 200) {\n          setReviews(reviews.filter(review => review.reviewId !== reviewId));\n          setHasUserReviewed(false);\n        } else {\n          console.error(\"Error deleting review:\", response);\n        }\n      } catch (error) {\n        console.error(\"Error deleting review:\", error);\n      }\n    }\n  };\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 12\n    }, this);\n  }\n  const onStarClick = nextValue => {\n    setRating(nextValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card custom-form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-img-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `/${product.imgUrl}`,\n                    alt: product.productName,\n                    className: \"card-img\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-8\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center mb-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"mb-2 fs-4\",\n                    children: product.productName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: product.productDescription\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Price: $\", product.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this), getProductQuantity(product.productId) === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn custom-button mt-1\",\n                  onClick: () => {\n                    if (user) {\n                      addToCart(product.productId, 1);\n                    } else {\n                      alert(\"Please log in to add items to the cart.\");\n                    }\n                  },\n                  children: \"Add to Cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn custom-button mt-1\",\n                    onClick: () => decreaseQuantity(product.productId),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mx-2 mt-1\",\n                    children: getProductQuantity(product.productId)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn custom-button mt-1\",\n                    onClick: () => increaseQuantity(product.productId),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                  dangerouslySetInnerHTML: {\n                    __html: message\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: !isReviewFormVisible ? /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    onClick: e => {\n                      e.preventDefault();\n                      if (isLoggedIn) {\n                        if (hasUserReviewed) {\n                          setMessage(\"You have already left a review on this product.\");\n                        } else {\n                          setIsReviewFormVisible(true);\n                        }\n                      } else {\n                        setMessage(\"You must be logged in to leave a review. <a href='/login'>Login</a>\");\n                      }\n                    },\n                    children: \"Leave a review\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 23\n                  }, this) : \"Leave a review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  children: errorMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: \"green\"\n                  },\n                  children: successMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ReviewForm, {\n                  isReviewFormVisible: isReviewFormVisible,\n                  user: user,\n                  rating: rating,\n                  reviewContent: reviewContent,\n                  remainingChars: remainingChars,\n                  handleReviewContentChange: handleReviewContentChange,\n                  onStarClick: onStarClick,\n                  handleReviewSubmit: handleReviewSubmit,\n                  handleCancelReview: handleCancelReview,\n                  isEditMode: !!editingReview,\n                  reviewId: editingReview ? editingReview.reviewId : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    onClick: e => {\n                      e.preventDefault();\n                      toggleReviewsVisibility();\n                    },\n                    children: areReviewsVisible ? \"Hide reviews\" : \"See reviews\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ReviewList, {\n                  reviews: reviews,\n                  handleEditButtonClick: handleEditButtonClick,\n                  user: user,\n                  areReviewsVisible: areReviewsVisible,\n                  handleDeleteReview: handleDeleteReview,\n                  setEditingReview: setEditingReview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualProduct, \"mCpOFqiXPO+/NAYM1KvORWckQoM=\", false, function () {\n  return [useParams];\n});\n_c = IndividualProduct;\nexport default IndividualProduct;\nvar _c;\n$RefreshReg$(_c, \"IndividualProduct\");","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","useParams","Link","UserContext","CartContext","ReviewForm","ReviewList","jsxDEV","_jsxDEV","Fragment","_Fragment","IndividualProduct","_s","productId","product","setProduct","reviewContent","setReviewContent","message","setMessage","rating","setRating","remainingChars","setRemainingChars","isReviewFormVisible","setIsReviewFormVisible","reviews","setReviews","areReviewsVisible","setAreReviewsVisible","user","isLoggedIn","Boolean","hasUserReviewed","setHasUserReviewed","refreshReviews","setRefreshReviews","editingReview","setEditingReview","errorMessage","setErrorMessage","successMessage","setSuccessMessage","initialReviewContent","setInitialReviewContent","cart","addToCart","decreaseQuantity","increaseQuantity","getProductQuantity","quantity","cartLines","forEach","cartLine","handleEditButtonClick","review","content","handleCancelReview","handleReviewContentChange","e","target","value","length","toggleReviewsVisibility","toggleReviewFormVisibility","fetchProduct","response","get","data","error","console","fetchReviews","userReview","find","userId","handleReviewSubmit","reviewId","preventDefault","log","trim","setTimeout","put","status","prevReviews","map","post","reviewerName","username","newReview","handleDeleteReview","window","confirm","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onStarClick","nextValue","className","src","imgUrl","alt","productName","productDescription","price","onClick","alert","dangerouslySetInnerHTML","__html","href","style","color","isEditMode","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/frontend/src/pages/IndividualProductPage.js"],"sourcesContent":["// Import necessary modules and components\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { CartContext } from \"../context/CartContext\";\r\nimport ReviewForm from \"../components/ReviewForm\";\r\nimport ReviewList from \"../components/ReviewList\";\r\n\r\n// IndividualProduct component definition\r\nconst IndividualProduct = () => {\r\n  // State variables\r\n  const { productId } = useParams(); // Get the product ID from URL params\r\n  const [product, setProduct] = useState(null); // State for product data\r\n  const [reviewContent, setReviewContent] = useState(\"\"); // State for review content\r\n  const [message, setMessage] = useState(\"\"); // State for messages\r\n  const [rating, setRating] = useState(0); // State for rating\r\n  const [remainingChars, setRemainingChars] = useState(100); // State for remaining characters in review\r\n  const [isReviewFormVisible, setIsReviewFormVisible] = useState(false); // State for review form visibility\r\n  const [reviews, setReviews] = useState([]); // State for product reviews\r\n  const [areReviewsVisible, setAreReviewsVisible] = useState(false); // State for reviews visibility\r\n  const { user } = useContext(UserContext); // User context\r\n  const isLoggedIn = Boolean(user); // Check if user is logged in\r\n  const [hasUserReviewed, setHasUserReviewed] = useState(false); // State for user review status\r\n  const [refreshReviews, setRefreshReviews] = useState(false); // State to trigger review refresh\r\n  const [editingReview, setEditingReview] = useState(null); // State for editing review\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State for error messages\r\n  const [successMessage, setSuccessMessage] = useState(\"\"); // State for success messages\r\n  const [initialReviewContent, setInitialReviewContent] = useState(\"\"); // State for initial review content\r\n\r\n  // Cart context\r\n  const { cart, addToCart, decreaseQuantity, increaseQuantity } =\r\n    useContext(CartContext);\r\n\r\n  // Function to get product quantity from cart\r\n  const getProductQuantity = (productId) => {\r\n    let quantity = 0;\r\n    if (cart && cart.cartLines) {\r\n      cart.cartLines.forEach((cartLine) => {\r\n        if (cartLine.productId === productId) {\r\n          quantity = cartLine.quantity;\r\n        }\r\n      });\r\n    }\r\n    return quantity;\r\n  };\r\n\r\n  // Function to handle edit button click\r\n  const handleEditButtonClick = (review) => {\r\n    setEditingReview(review);\r\n    setReviewContent(review.content);\r\n    setRating(review.rating);\r\n    setIsReviewFormVisible(true);\r\n    setInitialReviewContent(review.content);\r\n  };\r\n\r\n  // Function to handle cancel review\r\n  const handleCancelReview = () => {\r\n    setIsReviewFormVisible(false);\r\n    setRating(0);\r\n    setReviewContent(\"\");\r\n    setRemainingChars(100);\r\n    setEditingReview(null);\r\n  };\r\n\r\n  // Function to handle review content change\r\n  const handleReviewContentChange = (e) => {\r\n    setReviewContent(e.target.value);\r\n    setRemainingChars(100 - e.target.value.length);\r\n  };\r\n\r\n  // Function to toggle reviews visibility\r\n  const toggleReviewsVisibility = () => {\r\n    setAreReviewsVisible(!areReviewsVisible);\r\n  };\r\n\r\n  // Function to toggle review form visibility\r\n  const toggleReviewFormVisibility = () => {\r\n    setIsReviewFormVisible(!isReviewFormVisible);\r\n  };\r\n\r\n  // Fetch product data\r\n  useEffect(() => {\r\n    const fetchProduct = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:4000/api/product/select/${productId}`\r\n        );\r\n        setProduct(response.data); // Set product data from response\r\n      } catch (error) {\r\n        console.error(\"Error fetching product:\", error); // Log error if fetching product fails\r\n      }\r\n    };\r\n    fetchProduct(); // Call fetchProduct function\r\n  }, [productId]); // Execute effect when productId changes\r\n\r\n  // Fetch reviews data\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      const response = await axios.get(\r\n        `http://localhost:4000/api/review/product/${productId}`\r\n      );\r\n      setReviews(response.data); // Set reviews data from response\r\n\r\n      if (user) {\r\n        const userReview = response.data.find(\r\n          (review) => review.userId === user.userId\r\n        );\r\n        setHasUserReviewed(Boolean(userReview)); // Set user review status\r\n      }\r\n\r\n      setRefreshReviews(false);\r\n    };\r\n\r\n    fetchReviews(); // Call fetchReviews function\r\n  }, [productId, user, refreshReviews]); // Execute effect when productId, user, or refreshReviews changes\r\n\r\n  // Function to handle review submission\r\n  const handleReviewSubmit = async (e, reviewId) => {\r\n    e.preventDefault();\r\n\r\n    if (!user) {\r\n      console.log(\"You must be logged in to leave a review\");\r\n      return;\r\n    }\r\n\r\n    // Check if reviewContent is empty\r\n    if (!reviewContent.trim()) {\r\n      setErrorMessage(\"Review can't be empty.\");\r\n      return;\r\n    }\r\n\r\n    // Check if reviewContent is the same as the initial review content\r\n    if (editingReview && reviewContent === initialReviewContent) {\r\n      setErrorMessage(\"No changes were made to the review\");\r\n      //Timeout error message after 2 seconds\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n      }, 1500);\r\n      return;\r\n    }\r\n    try {\r\n      if (editingReview) {\r\n        const response = await axios.put(\r\n          `http://localhost:4000/api/review/${reviewId}`,\r\n          {\r\n            content: reviewContent,\r\n            rating,\r\n          }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          setReviews((prevReviews) =>\r\n            prevReviews.map((review) =>\r\n              review.reviewId === editingReview.reviewId\r\n                ? { ...review, content: reviewContent, rating }\r\n                : review\r\n            )\r\n          );\r\n          setEditingReview(null);\r\n          setSuccessMessage(\"Review successfully updated.\");\r\n          // Clear the success message after 2 seconds\r\n          setTimeout(() => {\r\n            setSuccessMessage(\"\");\r\n          }, 2000);\r\n        } else {\r\n          console.error(\"Error updating review:\", response);\r\n        }\r\n      } else {\r\n        const response = await axios.post(\"http://localhost:4000/api/review\", {\r\n          productId,\r\n          userId: user.userId,\r\n          content: reviewContent,\r\n          rating,\r\n          reviewerName: user.username,\r\n        });\r\n        if (response.status === 200) {\r\n          const newReview = {\r\n            productId,\r\n            userId: user.userId,\r\n            content: reviewContent,\r\n            rating,\r\n            reviewerName: user.username,\r\n          };\r\n          setReviews((prevReviews) => [...prevReviews, newReview]);\r\n          setHasUserReviewed(true);\r\n        } else {\r\n          console.error(\"Error saving review:\", response);\r\n        }\r\n      }\r\n      //Clear review form and errors\r\n      setErrorMessage(\"\");\r\n      setRating(0);\r\n      setReviewContent(\"\");\r\n      setRemainingChars(100);\r\n      setIsReviewFormVisible(false);\r\n      setRefreshReviews(true);\r\n    } catch (error) {\r\n      console.error(\"Error saving review:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleDeleteReview = async (reviewId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this review?\")) {\r\n      try {\r\n        const response = await axios.delete(\r\n          `http://localhost:4000/api/review/${reviewId}`\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          setReviews(reviews.filter((review) => review.reviewId !== reviewId));\r\n          setHasUserReviewed(false);\r\n        } else {\r\n          console.error(\"Error deleting review:\", response);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error deleting review:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!product) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const onStarClick = (nextValue) => {\r\n    setRating(nextValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row justify-content-center mt-4\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card custom-form\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"card-img-container\">\r\n                    <img\r\n                      src={`/${product.imgUrl}`}\r\n                      alt={product.productName}\r\n                      className=\"card-img\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <div className=\"text-center mb-4\">\r\n                    <h1 className=\"mb-2 fs-4\">{product.productName}</h1>\r\n                  </div>\r\n                  <p>{product.productDescription}</p>\r\n                  <p>Price: ${product.price}</p>\r\n                  {getProductQuantity(product.productId) === 0 ? (\r\n                    <button\r\n                      className=\"btn custom-button mt-1\"\r\n                      onClick={() => {\r\n                        if (user) {\r\n                          addToCart(product.productId, 1);\r\n                        } else {\r\n                          alert(\"Please log in to add items to the cart.\");\r\n                        }\r\n                      }}\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                  ) : (\r\n                    <>\r\n                      <button\r\n                        className=\"btn custom-button mt-1\"\r\n                        onClick={() => decreaseQuantity(product.productId)}\r\n                      >\r\n                        -\r\n                      </button>\r\n                      <span className=\"mx-2 mt-1\">\r\n                        {getProductQuantity(product.productId)}\r\n                      </span>\r\n                      <button\r\n                        className=\"btn custom-button mt-1\"\r\n                        onClick={() => increaseQuantity(product.productId)}\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: message,\r\n                    }}\r\n                  />\r\n                  <div>\r\n                    {!isReviewFormVisible ? (\r\n                      <a\r\n                        href=\"#\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          if (isLoggedIn) {\r\n                            if (hasUserReviewed) {\r\n                              setMessage(\r\n                                \"You have already left a review on this product.\"\r\n                              );\r\n                            } else {\r\n                              setIsReviewFormVisible(true);\r\n                            }\r\n                          } else {\r\n                            setMessage(\r\n                              \"You must be logged in to leave a review. <a href='/login'>Login</a>\"\r\n                            );\r\n                          }\r\n                        }}\r\n                      >\r\n                        Leave a review\r\n                      </a>\r\n                    ) : (\r\n                      \"Leave a review\"\r\n                    )}\r\n                  </div>\r\n                  {errorMessage && (\r\n                    <div style={{ color: \"red\" }}>{errorMessage}</div>\r\n                  )}\r\n                  {successMessage && (\r\n                    <div style={{ color: \"green\" }}>{successMessage}</div>\r\n                  )}\r\n                  <ReviewForm\r\n                    isReviewFormVisible={isReviewFormVisible}\r\n                    user={user}\r\n                    rating={rating}\r\n                    reviewContent={reviewContent}\r\n                    remainingChars={remainingChars}\r\n                    handleReviewContentChange={handleReviewContentChange}\r\n                    onStarClick={onStarClick}\r\n                    handleReviewSubmit={handleReviewSubmit}\r\n                    handleCancelReview={handleCancelReview}\r\n                    isEditMode={!!editingReview}\r\n                    reviewId={editingReview ? editingReview.reviewId : null}\r\n                  />\r\n                  <div>\r\n                    <a\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        toggleReviewsVisibility();\r\n                      }}\r\n                    >\r\n                      {areReviewsVisible ? \"Hide reviews\" : \"See reviews\"}\r\n                    </a>\r\n                  </div>\r\n                  <ReviewList\r\n                    reviews={reviews}\r\n                    handleEditButtonClick={handleEditButtonClick}\r\n                    user={user}\r\n                    areReviewsVisible={areReviewsVisible}\r\n                    handleDeleteReview={handleDeleteReview}\r\n                    setEditingReview={setEditingReview}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualProduct;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}