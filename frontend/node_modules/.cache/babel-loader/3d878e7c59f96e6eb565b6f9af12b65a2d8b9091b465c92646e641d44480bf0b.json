{"ast":null,"code":"import axios from \"axios\";\nconst SPECIALS_KEY = \"specials\";\nfunction formatDate(joinDate) {\n  const date = new Date(joinDate);\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return date.toLocaleDateString('en-US', options);\n}\n\n// Function to initialize local storage with specials data if not already initialized\nfunction initSpecials() {\n  // Stop if data is already initialized\n  if (localStorage.getItem(SPECIALS_KEY) !== null) return;\n\n  // Initialize specials data with an empty array\n  const specials = [{\n    id: 1,\n    name: \"Apples\",\n    image: \"apple.png\",\n    price: 2.99,\n    description: \"Fresh organic apples from local farms.\",\n    quantity: 0\n  }, {\n    id: 2,\n    name: \"Spinach\",\n    image: \"spinach.png\",\n    price: 3.49,\n    description: \"Tender organic spinach leaves, perfect for salads.\",\n    quantity: 0\n  }, {\n    id: 3,\n    name: \"Freshly Baked Bread\",\n    image: \"bread.png\",\n    price: 4.99,\n    description: \"Warm and crusty artisan bread, straight from the oven.\",\n    quantity: 0\n  }, {\n    id: 4,\n    name: \"Handcrafted Soap\",\n    image: \"soap.png\",\n    price: 6.99,\n    description: \"Natural and moisturizing soap made with essential oils.\",\n    quantity: 0\n  }, {\n    id: 5,\n    name: \"Tomato Plant\",\n    image: \"tomatoes.png\",\n    price: 7.99,\n    description: \"Healthy and robust tomato plant for your garden.\",\n    quantity: 0\n  }, {\n    id: 6,\n    name: \"Free-Range Chicken\",\n    image: \"hen.png\",\n    price: 9.99,\n    description: \"Humanely raised and organic free-range chicken.\",\n    quantity: 0\n  }, {\n    id: 7,\n    name: \"Fresh Cookies\",\n    image: \"cookies.png\",\n    price: 3.99,\n    description: \"Soft and chewy cookies baked with organic ingredients.\",\n    quantity: 0\n  }, {\n    id: 9,\n    name: \"Herb Garden Kit\",\n    image: \"growing-plant.png\",\n    price: 12.99,\n    description: \"Complete kit for growing your own organic herbs at home.\",\n    quantity: 0\n  }, {\n    id: 10,\n    name: \"Grass-Fed Beef\",\n    image: \"beef-steak.png\",\n    price: 13.99,\n    description: \"Lean and flavorful grass-fed beef, perfect for grilling.\",\n    quantity: 0\n  }, {\n    id: 11,\n    name: \"Fresh Orange Juice\",\n    image: \"juice.png\",\n    price: 5.49,\n    description: \"Pure and refreshing orange juice, squeezed from ripe oranges.\",\n    quantity: 0\n  }, {\n    id: 12,\n    name: \"Flower Bouquet\",\n    image: \"flower.png\",\n    price: 8.99,\n    description: \"Beautiful and fragrant bouquet of fresh-cut flowers.\",\n    quantity: 0\n  }];\n  // Set data into local storage\n  localStorage.setItem(SPECIALS_KEY, JSON.stringify(specials));\n}\nexport { initSpecials, formatDate };\n\n// --- Constants ----------------------------------------------------------------------------------\nconst API_HOST = \"http://localhost:4000\";\nconst USER_KEY = \"user\";\n\n// --- User ---------------------------------------------------------------------------------------\nasync function verifyUser(username, password) {\n  const response = await axios.get(API_HOST + \"/api/users/login\", {\n    params: {\n      username,\n      password\n    }\n  });\n  const user = response.data;\n\n  // NOTE: In this example the login is also persistent as it is stored in local storage.\n  if (user !== null) setUser(user);\n  return user;\n}\nasync function findUser(id) {\n  const response = await axios.get(API_HOST + `/api/users/select/${id}`);\n  return response.data;\n}\nasync function createUser(user) {\n  const response = await axios.post(API_HOST + \"/api/users\", user);\n  return response.data;\n}\n\n// --- Post ---------------------------------------------------------------------------------------\nasync function getPosts() {\n  const response = await axios.get(API_HOST + \"/api/posts\");\n  return response.data;\n}\nasync function createPost(post) {\n  const response = await axios.post(API_HOST + \"/api/posts\", post);\n  return response.data;\n}\n\n// --- Helper functions to interact with local storage --------------------------------------------\nfunction setUser(user) {\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n}\nfunction getUser() {\n  return JSON.parse(localStorage.getItem(USER_KEY));\n}\nfunction removeUser() {\n  localStorage.removeItem(USER_KEY);\n}\nexport { verifyUser, findUser, createUser, getPosts, createPost, getUser, removeUser };","map":{"version":3,"names":["axios","SPECIALS_KEY","formatDate","joinDate","date","Date","options","year","month","day","toLocaleDateString","initSpecials","localStorage","getItem","specials","id","name","image","price","description","quantity","setItem","JSON","stringify","API_HOST","USER_KEY","verifyUser","username","password","response","get","params","user","data","setUser","findUser","createUser","post","getPosts","createPost","getUser","parse","removeUser","removeItem"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/frontend/src/data/repository.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst SPECIALS_KEY = \"specials\";\r\n\r\n\r\n  function formatDate(joinDate) {\r\n    const date = new Date(joinDate);\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return date.toLocaleDateString('en-US', options);\r\n  }\r\n\r\n  // Function to initialize local storage with specials data if not already initialized\r\nfunction initSpecials() {\r\n    // Stop if data is already initialized\r\n    if (localStorage.getItem(SPECIALS_KEY) !== null) \r\n      return;\r\n  \r\n    // Initialize specials data with an empty array\r\n    const specials = [\r\n    {\r\n      id: 1,\r\n      name: \"Apples\",\r\n      image: \"apple.png\",\r\n      price: 2.99,\r\n      description: \"Fresh organic apples from local farms.\",\r\n      quantity: 0\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Spinach\",\r\n      image: \"spinach.png\",\r\n      price: 3.49,\r\n      description: \"Tender organic spinach leaves, perfect for salads.\",\r\n      quantity: 0\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Freshly Baked Bread\",\r\n      image: \"bread.png\",\r\n      price: 4.99,\r\n      description: \"Warm and crusty artisan bread, straight from the oven.\",\r\n      quantity: 0\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Handcrafted Soap\",\r\n      image: \"soap.png\",\r\n      price: 6.99,\r\n      description: \"Natural and moisturizing soap made with essential oils.\",\r\n      quantity: 0\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Tomato Plant\",\r\n      image: \"tomatoes.png\",\r\n      price: 7.99,\r\n      description: \"Healthy and robust tomato plant for your garden.\",\r\n      quantity: 0\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Free-Range Chicken\",\r\n      image: \"hen.png\",\r\n      price: 9.99,\r\n      description: \"Humanely raised and organic free-range chicken.\",\r\n      quantity: 0\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Fresh Cookies\",\r\n      image: \"cookies.png\",\r\n      price: 3.99,\r\n      description: \"Soft and chewy cookies baked with organic ingredients.\",\r\n      quantity: 0\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Herb Garden Kit\",\r\n      image: \"growing-plant.png\",\r\n      price: 12.99,\r\n      description: \"Complete kit for growing your own organic herbs at home.\",\r\n      quantity: 0\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Grass-Fed Beef\",\r\n      image: \"beef-steak.png\",\r\n      price: 13.99,\r\n      description: \"Lean and flavorful grass-fed beef, perfect for grilling.\",\r\n      quantity: 0\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Fresh Orange Juice\",\r\n      image: \"juice.png\",\r\n      price: 5.49,\r\n      description: \"Pure and refreshing orange juice, squeezed from ripe oranges.\",\r\n      quantity: 0\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Flower Bouquet\",\r\n      image: \"flower.png\",\r\n      price: 8.99,\r\n      description: \"Beautiful and fragrant bouquet of fresh-cut flowers.\",\r\n      quantity: 0\r\n    },\r\n  ];\r\n  // Set data into local storage\r\n  localStorage.setItem(SPECIALS_KEY, JSON.stringify(specials));\r\n}\r\n\r\n\r\n\r\nexport {initSpecials, formatDate };\r\n\r\n\r\n// --- Constants ----------------------------------------------------------------------------------\r\nconst API_HOST = \"http://localhost:4000\";\r\nconst USER_KEY = \"user\";\r\n\r\n// --- User ---------------------------------------------------------------------------------------\r\nasync function verifyUser(username, password) {\r\n  const response = await axios.get(API_HOST + \"/api/users/login\", { params: { username, password } });\r\n  const user = response.data;\r\n  \r\n  // NOTE: In this example the login is also persistent as it is stored in local storage.\r\n  if(user !== null)\r\n    setUser(user);\r\n\r\n  return user;\r\n}\r\n\r\nasync function findUser(id) {\r\n  const response = await axios.get(API_HOST + `/api/users/select/${id}`);\r\n\r\n  return response.data;\r\n}\r\n\r\nasync function createUser(user) {\r\n  const response = await axios.post(API_HOST + \"/api/users\", user);\r\n\r\n  return response.data;\r\n}\r\n\r\n// --- Post ---------------------------------------------------------------------------------------\r\nasync function getPosts() {\r\n  const response = await axios.get(API_HOST + \"/api/posts\");\r\n\r\n  return response.data;\r\n}\r\n\r\nasync function createPost(post) {\r\n  const response = await axios.post(API_HOST + \"/api/posts\", post);\r\n\r\n  return response.data;\r\n}\r\n\r\n// --- Helper functions to interact with local storage --------------------------------------------\r\nfunction setUser(user) {\r\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n}\r\n\r\nfunction getUser() {\r\n  return JSON.parse(localStorage.getItem(USER_KEY));\r\n}\r\n\r\nfunction removeUser() {\r\n  localStorage.removeItem(USER_KEY);\r\n}\r\n\r\nexport {\r\n  verifyUser, findUser, createUser,\r\n  getPosts, createPost,\r\n  getUser, removeUser\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}