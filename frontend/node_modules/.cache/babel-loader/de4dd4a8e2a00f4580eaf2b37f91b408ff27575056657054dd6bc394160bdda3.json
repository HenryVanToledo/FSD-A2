{"ast":null,"code":"import axios from \"axios\";\n\n// --- Constants ----------------------------------------------------------------------------------\nconst API_HOST = \"http://localhost:4000\";\nconst USER_KEY = \"user\";\n\n// --- User ---------------------------------------------------------------------------------------\nasync function verifyUser(email, password) {\n  const response = await axios.post(API_HOST + \"/api/users/login\", {\n    email,\n    password\n  });\n  console.log('response data', response.data);\n  const user = response.data;\n\n  // NOTE: In this example the login is also persistent as it is stored in local storage.\n  if (user !== null) setUser(user);\n  return user;\n}\nasync function findUser(id) {\n  const response = await axios.get(API_HOST + `/api/users/select/${id}`);\n  return response.data;\n}\nasync function createUser(user) {\n  const response = await axios.post(API_HOST + \"/api/users\", user);\n  return response.data;\n}\n\n// --- Post ---------------------------------------------------------------------------------------\nasync function getPosts() {\n  const response = await axios.get(API_HOST + \"/api/posts\");\n  return response.data;\n}\nasync function createPost(post) {\n  const response = await axios.post(API_HOST + \"/api/posts\", post);\n  return response.data;\n}\n\n// --- Helper functions to interact with local storage --------------------------------------------\nfunction setUser(user) {\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n}\nfunction getUser() {\n  return JSON.parse(localStorage.getItem(USER_KEY));\n}\nfunction removeUser() {\n  localStorage.removeItem(USER_KEY);\n}\nexport { verifyUser, findUser, createUser, getPosts, createPost, getUser, removeUser };","map":{"version":3,"names":["axios","API_HOST","USER_KEY","verifyUser","email","password","response","post","console","log","data","user","setUser","findUser","id","get","createUser","getPosts","createPost","localStorage","setItem","JSON","stringify","getUser","parse","getItem","removeUser","removeItem"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/frontend/src/data/repository.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// --- Constants ----------------------------------------------------------------------------------\r\nconst API_HOST = \"http://localhost:4000\";\r\nconst USER_KEY = \"user\";\r\n\r\n// --- User ---------------------------------------------------------------------------------------\r\nasync function verifyUser(email, password) {\r\n  const response = await axios.post(API_HOST + \"/api/users/login\", { email, password });\r\n  console.log('response data', response.data);\r\n  const user = response.data;\r\n  \r\n  // NOTE: In this example the login is also persistent as it is stored in local storage.\r\n  if(user !== null)\r\n    setUser(user);\r\n\r\n  return user;\r\n}\r\n\r\nasync function findUser(id) { \r\n  const response = await axios.get(API_HOST + `/api/users/select/${id}`);\r\n\r\n  return response.data;\r\n}\r\n\r\nasync function createUser(user) {\r\n  const response = await axios.post(API_HOST + \"/api/users\", user);\r\n\r\n  return response.data;\r\n}\r\n\r\n// --- Post ---------------------------------------------------------------------------------------\r\nasync function getPosts() {\r\n  const response = await axios.get(API_HOST + \"/api/posts\");\r\n\r\n  return response.data;\r\n}\r\n\r\nasync function createPost(post) {\r\n  const response = await axios.post(API_HOST + \"/api/posts\", post);\r\n\r\n  return response.data;\r\n}\r\n\r\n// --- Helper functions to interact with local storage --------------------------------------------\r\nfunction setUser(user) {\r\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n}\r\n\r\nfunction getUser() {\r\n  return JSON.parse(localStorage.getItem(USER_KEY));\r\n}\r\n\r\nfunction removeUser() {\r\n  localStorage.removeItem(USER_KEY);\r\n}\r\n\r\nexport {\r\n  verifyUser, findUser, createUser,\r\n  getPosts, createPost,\r\n  getUser, removeUser\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,uBAAuB;AACxC,MAAMC,QAAQ,GAAG,MAAM;;AAEvB;AACA,eAAeC,UAAUA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACzC,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,QAAQ,GAAG,kBAAkB,EAAE;IAAEG,KAAK;IAAEC;EAAS,CAAC,CAAC;EACrFG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC;EAC3C,MAAMC,IAAI,GAAGL,QAAQ,CAACI,IAAI;;EAE1B;EACA,IAAGC,IAAI,KAAK,IAAI,EACdC,OAAO,CAACD,IAAI,CAAC;EAEf,OAAOA,IAAI;AACb;AAEA,eAAeE,QAAQA,CAACC,EAAE,EAAE;EAC1B,MAAMR,QAAQ,GAAG,MAAMN,KAAK,CAACe,GAAG,CAACd,QAAQ,GAAI,qBAAoBa,EAAG,EAAC,CAAC;EAEtE,OAAOR,QAAQ,CAACI,IAAI;AACtB;AAEA,eAAeM,UAAUA,CAACL,IAAI,EAAE;EAC9B,MAAML,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,QAAQ,GAAG,YAAY,EAAEU,IAAI,CAAC;EAEhE,OAAOL,QAAQ,CAACI,IAAI;AACtB;;AAEA;AACA,eAAeO,QAAQA,CAAA,EAAG;EACxB,MAAMX,QAAQ,GAAG,MAAMN,KAAK,CAACe,GAAG,CAACd,QAAQ,GAAG,YAAY,CAAC;EAEzD,OAAOK,QAAQ,CAACI,IAAI;AACtB;AAEA,eAAeQ,UAAUA,CAACX,IAAI,EAAE;EAC9B,MAAMD,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,QAAQ,GAAG,YAAY,EAAEM,IAAI,CAAC;EAEhE,OAAOD,QAAQ,CAACI,IAAI;AACtB;;AAEA;AACA,SAASE,OAAOA,CAACD,IAAI,EAAE;EACrBQ,YAAY,CAACC,OAAO,CAAClB,QAAQ,EAAEmB,IAAI,CAACC,SAAS,CAACX,IAAI,CAAC,CAAC;AACtD;AAEA,SAASY,OAAOA,CAAA,EAAG;EACjB,OAAOF,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAACvB,QAAQ,CAAC,CAAC;AACnD;AAEA,SAASwB,UAAUA,CAAA,EAAG;EACpBP,YAAY,CAACQ,UAAU,CAACzB,QAAQ,CAAC;AACnC;AAEA,SACEC,UAAU,EAAEU,QAAQ,EAAEG,UAAU,EAChCC,QAAQ,EAAEC,UAAU,EACpBK,OAAO,EAAEG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}