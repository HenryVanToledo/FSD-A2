{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Business\\\\Wabi\\\\FSD-A2\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport signupFormValidation from \"../components/signupFormValidation\";\nimport axios from \"axios\";\nimport { UserContext } from \"../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  // initialising all the hooks\n  const navigate = useNavigate();\n  const {\n    user,\n    logoutUser,\n    updateUser,\n    deleteUser\n  } = useContext(UserContext);\n  const [editMode, setEditMode] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [formValues, setFormValues] = useState(user ? {\n    ...user,\n    confirmPassword: user.password\n  } : {});\n  const [editSuccess, setEditSuccess] = useState(false);\n  const [accountDeleted, setAccountDeleted] = useState(false);\n\n  // useEffect to update formValues when user changes\n  useEffect(() => {\n    if (user) {\n      setFormValues({\n        ...user,\n        confirmPassword: user.password\n      });\n    }\n  }, [user]);\n\n  // Handle for when form values change\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle for when user logs out\n  const handleLogout = () => {\n    logoutUser();\n    navigate(\"/login\");\n  };\n\n  // Handle for when user edits profile info\n  const handleSaveChanges = async () => {\n    if (validateForm(formValues)) {\n      try {\n        const updatedValues = {\n          ...formValues\n        };\n\n        // Remove confirmPassword before sending the update\n        delete updatedValues.confirmPassword;\n\n        // Only include password if it has been changed\n        if (!updatedValues.password) {\n          delete updatedValues.password;\n        }\n\n        // Check if formValues are the same as the initial user values\n        if (JSON.stringify(updatedValues) === JSON.stringify(user)) {\n          setEditMode(false);\n          return;\n        }\n        console.log(\"Form values before update:\", updatedValues);\n        await updateUser(user.userId, updatedValues);\n        console.log(\"User updated successfully\");\n        setEditSuccess(true);\n        setEditMode(false);\n\n        // Hide the success message after 3 seconds\n        setTimeout(() => {\n          setEditSuccess(false);\n        }, 3000);\n      } catch (error) {\n        console.error(\"Error updating profile:\", error);\n      }\n    }\n  };\n\n  // Handle for when user deletes account\n  const handleDeleteAccount = async () => {\n    try {\n      await deleteUser(user.userId);\n      setAccountDeleted(true);\n      setTimeout(() => {\n        logoutUser();\n        navigate(\"/\");\n      }, 3000);\n    } catch (error) {\n      console.error(\"Error deleting account:\", error);\n    }\n  };\n\n  // Form Validation\n  const validateForm = formValues => {\n    let errors = {};\n    let isValid = true;\n\n    // Check email in correct format\n    if (!formValues.email) {\n      errors.email = \"Email is required\";\n      isValid = false;\n    }\n\n    // Check email has @ and .\n    if (!/\\S+@\\S+\\.\\S+/.test(formValues.email)) {\n      errors.email = \"Email address is invalid\";\n      isValid = false;\n    }\n\n    // Check password is at least 8 characters\n    if (formValues.password && formValues.password.length < 8) {\n      errors.password = \"Password must be 8 or more characters\";\n      isValid = false;\n    }\n\n    // Check password has special characters\n    if (formValues.password && !/(?=.*[!@#$%^&*])/.test(formValues.password)) {\n      errors.password = \"Password must contain a special character\";\n      isValid = false;\n    }\n\n    // Check password has uppercase letter\n    if (formValues.password && !/(?=.*[A-Z])/.test(formValues.password)) {\n      errors.password = \"Password must contain an uppercase letter\";\n      isValid = false;\n    }\n\n    // Check password has number\n    if (formValues.password && !/(?=.*[0-9])/.test(formValues.password)) {\n      errors.password = \"Password must contain a number\";\n      isValid = false;\n    }\n\n    //\n    setErrors(errors);\n\n    // If no issues, return true\n    return isValid;\n  };\n  return (\n    /*#__PURE__*/\n    // Profile Page\n    _jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [editSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success text-center mt-4 col-md-6 mx-auto\",\n        role: \"alert\",\n        children: \"Your profile details have been updated successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), accountDeleted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger text-center mt-4 col-md-6 mx-auto\",\n        role: \"alert\",\n        children: \"Account deleted. You will be redirected to the home page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-4\",\n        children: user && /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontWeight: \"bold\",\n            fontSize: \"40px\"\n          },\n          children: [\"Welcome, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"mb-2 fs-4 text-center\",\n                children: \"Your Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 15\n              }, this), user ? /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => e.preventDefault(),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: \"Username:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: `form-control ${errors.username ? \"is-invalid\" : \"\"}`,\n                    name: \"username\",\n                    value: formValues.username,\n                    onChange: handleChange,\n                    disabled: !editMode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 21\n                  }, this), errors.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: errors.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: \"Email:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: `form-control ${errors.email ? \"is-invalid\" : \"\"}`,\n                    name: \"email\",\n                    value: formValues.email,\n                    onChange: handleChange,\n                    disabled: !editMode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 21\n                  }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: errors.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: \"Password:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: `form-control ${errors.password ? \"is-invalid\" : \"\"}`,\n                    name: \"password\",\n                    value: formValues.password,\n                    onChange: handleChange,\n                    disabled: !editMode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: errors.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-success mx-1\",\n                    onClick: handleSaveChanges,\n                    children: \"Save Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-secondary mx-1\",\n                    onClick: () => {\n                      setEditMode(false);\n                      setFormValues({\n                        ...user,\n                        confirmPassword: user.password\n                      });\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this) :\n                /*#__PURE__*/\n                // If not in edit mode, display edit profile, logout, and delete account buttons\n                _jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-primary mx-1\",\n                    onClick: () => setEditMode(true),\n                    children: \"Edit Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger mx-1\",\n                    onClick: handleLogout,\n                    children: \"Logout\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger mx-1\",\n                    onClick: handleDeleteAccount,\n                    children: \"Delete Account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this) :\n              /*#__PURE__*/\n              // If user is not logged in, display message to log in\n              _jsxDEV(\"p\", {\n                className: \"text-center\",\n                children: [\"Please \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: \"log in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 26\n                }, this), \" to view your profile.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Profile, \"icg5ub8/Re8tNmMie3vCJk4N35k=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","useNavigate","signupFormValidation","axios","UserContext","jsxDEV","_jsxDEV","Profile","_s","navigate","user","logoutUser","updateUser","deleteUser","editMode","setEditMode","errors","setErrors","formValues","setFormValues","confirmPassword","password","editSuccess","setEditSuccess","accountDeleted","setAccountDeleted","handleChange","event","name","value","target","prev","handleLogout","handleSaveChanges","validateForm","updatedValues","JSON","stringify","console","log","userId","setTimeout","error","handleDeleteAccount","isValid","email","test","length","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","fontSize","username","onSubmit","e","preventDefault","type","onChange","disabled","onClick","to","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport signupFormValidation from \"../components/signupFormValidation\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"../context/UserContext\";\r\n\r\nfunction Profile() {\r\n  // initialising all the hooks\r\n  const navigate = useNavigate();\r\n  const { user, logoutUser, updateUser, deleteUser } = useContext(UserContext);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [formValues, setFormValues] = useState(\r\n    user ? { ...user, confirmPassword: user.password } : {}\r\n  );\r\n  const [editSuccess, setEditSuccess] = useState(false);\r\n  const [accountDeleted, setAccountDeleted] = useState(false);\r\n\r\n  // useEffect to update formValues when user changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFormValues({ ...user, confirmPassword: user.password });\r\n    }\r\n  }, [user]);\r\n\r\n  // Handle for when form values change\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormValues((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handle for when user logs out\r\n  const handleLogout = () => {\r\n    logoutUser();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  // Handle for when user edits profile info\r\n  const handleSaveChanges = async () => {\r\n    if (validateForm(formValues)) {\r\n      try {\r\n        const updatedValues = { ...formValues };\r\n\r\n        // Remove confirmPassword before sending the update\r\n        delete updatedValues.confirmPassword;\r\n\r\n        // Only include password if it has been changed\r\n        if (!updatedValues.password) {\r\n          delete updatedValues.password;\r\n        }\r\n\r\n        // Check if formValues are the same as the initial user values\r\n        if (JSON.stringify(updatedValues) === JSON.stringify(user)) {\r\n          setEditMode(false);\r\n          return;\r\n        }\r\n\r\n        console.log(\"Form values before update:\", updatedValues);\r\n        await updateUser(user.userId, updatedValues);\r\n        console.log(\"User updated successfully\");\r\n        setEditSuccess(true);\r\n        setEditMode(false);\r\n\r\n         // Hide the success message after 3 seconds\r\n         setTimeout(() => {\r\n          setEditSuccess(false);\r\n        }, 3000);\r\n      } catch (error) {\r\n        console.error(\"Error updating profile:\", error);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Handle for when user deletes account\r\n  const handleDeleteAccount = async () => {\r\n    try {\r\n      await deleteUser(user.userId);\r\n      setAccountDeleted(true);\r\n      setTimeout(() => {\r\n        logoutUser();\r\n        navigate(\"/\");\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Error deleting account:\", error);\r\n    }\r\n  };\r\n\r\n  // Form Validation\r\n  const validateForm = (formValues) => {\r\n    let errors = {};\r\n    let isValid = true;\r\n\r\n    // Check email in correct format\r\n    if (!formValues.email) {\r\n      errors.email = \"Email is required\";\r\n      isValid = false;\r\n    }\r\n\r\n    // Check email has @ and .\r\n    if (!/\\S+@\\S+\\.\\S+/.test(formValues.email)) {\r\n      errors.email = \"Email address is invalid\";\r\n      isValid = false;\r\n    }\r\n\r\n    // Check password is at least 8 characters\r\n    if (formValues.password && formValues.password.length < 8) {\r\n      errors.password = \"Password must be 8 or more characters\";\r\n      isValid = false;\r\n    }\r\n\r\n    // Check password has special characters\r\n    if (formValues.password && !/(?=.*[!@#$%^&*])/.test(formValues.password)) {\r\n      errors.password = \"Password must contain a special character\";\r\n      isValid = false;\r\n    }\r\n\r\n    // Check password has uppercase letter\r\n    if (formValues.password && !/(?=.*[A-Z])/.test(formValues.password)) {\r\n      errors.password = \"Password must contain an uppercase letter\";\r\n      isValid = false;\r\n    }\r\n\r\n    // Check password has number\r\n    if (formValues.password && !/(?=.*[0-9])/.test(formValues.password)) {\r\n      errors.password = \"Password must contain a number\";\r\n      isValid = false;\r\n    }\r\n\r\n    //\r\n    setErrors(errors);\r\n\r\n    // If no issues, return true\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    // Profile Page\r\n    <div className=\"container-fluid\">\r\n      {editSuccess && (\r\n        <div\r\n          className=\"alert alert-success text-center mt-4 col-md-6 mx-auto\"\r\n          role=\"alert\"\r\n        >\r\n          Your profile details have been updated successfully!\r\n        </div>\r\n      )}\r\n      {/* account deletion confirmation message */}\r\n      {accountDeleted && (\r\n        <div\r\n          className=\"alert alert-danger text-center mt-4 col-md-6 mx-auto\"\r\n          role=\"alert\"\r\n        >\r\n          Account deleted. You will be redirected to the home page.\r\n        </div>\r\n      )}\r\n\r\n      {/* Welcome Message to user */}\r\n      <div className=\"text-center mt-4\">\r\n        {user && (\r\n          <h1 style={{ fontWeight: \"bold\", fontSize: \"40px\" }}>\r\n            Welcome, {user.username}!\r\n          </h1>\r\n        )}\r\n      </div>\r\n\r\n      {/* Profile Form */}\r\n      <div className=\"row justify-content-center mt-4\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h1 className=\"mb-2 fs-4 text-center\">Your Profile</h1>\r\n              {/* If user is logged in, display profile form */}\r\n              {user ? (\r\n                <form onSubmit={(e) => e.preventDefault()}>\r\n                  {/* Username Section */}\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Username:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`form-control ${\r\n                        errors.username ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      name=\"username\"\r\n                      value={formValues.username}\r\n                      onChange={handleChange}\r\n                      disabled={!editMode}\r\n                    />\r\n                    {errors.username && (\r\n                      <div className=\"invalid-feedback\">{errors.username}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Email Section */}\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Email:</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className={`form-control ${\r\n                        errors.email ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      name=\"email\"\r\n                      value={formValues.email}\r\n                      onChange={handleChange}\r\n                      disabled={!editMode}\r\n                    />\r\n                    {errors.email && (\r\n                      <div className=\"invalid-feedback\">{errors.email}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Password Section */}\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Password:</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className={`form-control ${\r\n                        errors.password ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      name=\"password\"\r\n                      value={formValues.password}\r\n                      onChange={handleChange}\r\n                      disabled={!editMode}\r\n                    />\r\n                    {errors.password && (\r\n                      <div className=\"invalid-feedback\">{errors.password}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* If in edit mode, display save changes or cancel buttons */}\r\n                  {editMode ? (\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success mx-1\"\r\n                        onClick={handleSaveChanges}\r\n                      >\r\n                        Save Changes\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary mx-1\"\r\n                        onClick={() => {\r\n                          setEditMode(false);\r\n                          setFormValues({\r\n                            ...user,\r\n                            confirmPassword: user.password,\r\n                          });\r\n                        }}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    // If not in edit mode, display edit profile, logout, and delete account buttons\r\n                    <div className=\"text-center\">\r\n                      {/* Edit Profile Button */}\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary mx-1\"\r\n                        onClick={() => setEditMode(true)}\r\n                      >\r\n                        Edit Profile\r\n                      </button>\r\n                      {/* Logout Button */}\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger mx-1\"\r\n                        onClick={handleLogout}\r\n                      >\r\n                        Logout\r\n                      </button>\r\n                      {/* Delete Account Button */}\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger mx-1\"\r\n                        onClick={handleDeleteAccount}\r\n                      >\r\n                        Delete Account\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </form>\r\n              ) : (\r\n                // If user is not logged in, display message to log in\r\n                <p className=\"text-center\">\r\n                  Please <Link to=\"/login\">log in</Link> to view your profile.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}