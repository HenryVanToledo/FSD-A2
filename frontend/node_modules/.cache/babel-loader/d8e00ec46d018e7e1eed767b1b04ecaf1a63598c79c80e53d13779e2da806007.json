{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useForm = (callback, validate) => {\n  _s();\n  const [values, setValues] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // return for all the hooks\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    setValues,\n    errors,\n    setErrors,\n    errorMessage,\n    setErrorMessage\n  };\n};\n_s(useForm, \"kJwclc4cP1735KnrFp2X2Wjz0LI=\");\nexport default useForm;","map":{"version":3,"names":["useState","useEffect","useForm","callback","validate","_s","values","setValues","email","password","errors","setErrors","isSubmitting","setIsSubmitting","errorMessage","setErrorMessage","Object","keys","length","handleSubmit","event","preventDefault","handleChange","target","name","value"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/frontend/src/hooks/useForm.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  \r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // return for all the hooks\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    errorMessage, \r\n    setErrorMessage, \r\n  };\r\n};\r\n\r\nexport default useForm;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IACnCQ,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,IAAIe,MAAM,CAACC,IAAI,CAACP,MAAM,CAAC,CAACQ,MAAM,KAAK,CAAC,IAAIN,YAAY,EAAE;MACpDT,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACO,MAAM,CAAC,CAAC;EAEZ,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9B,IAAIA,KAAK,EAAEA,KAAK,CAACC,cAAc,CAAC,CAAC;IACjCV,SAAS,CAACP,QAAQ,CAACE,MAAM,CAAC,CAAC;IAC3BO,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAGD,MAAMS,YAAY,GAAIF,KAAK,IAAK;IAC9Bb,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACc,KAAK,CAACG,MAAM,CAACC,IAAI,GAAGJ,KAAK,CAACG,MAAM,CAACE;IAAM,CAAC,CAAC;EACnE,CAAC;;EAED;EACA,OAAO;IACLH,YAAY;IACZH,YAAY;IACZb,MAAM;IACNC,SAAS;IACTG,MAAM;IACNC,SAAS;IACTG,YAAY;IACZC;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CAtCIH,OAAO;AAwCb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}