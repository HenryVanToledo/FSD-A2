{"ast":null,"code":"import axios from \"axios\";\nconst USERS_KEY = \"users\";\nconst SPECIALS_KEY = \"specials\";\n\n// Function to initialize local storage with user data if not already initialized\nfunction initUsers() {\n  if (localStorage.getItem(USERS_KEY) !== null) return;\n  const users = [{\n    id: generateUniqueId(),\n    // New unique ID\n    name: \"Isaac\",\n    email: \"ik@gmail.com\",\n    password: \"Abcd1234!\",\n    joinDate: new Date().toISOString()\n  }, {\n    id: generateUniqueId(),\n    // New unique ID\n    name: \"Test\",\n    email: \"test@t.com\",\n    password: \"Testpassword1!\",\n    joinDate: new Date().toISOString()\n  }];\n  localStorage.setItem(USERS_KEY, JSON.stringify(users));\n}\n\n// Helper function to generate a unique ID\nfunction generateUniqueId() {\n  // Use a simple approach to create unique IDs, such as UUIDs, timestamps, or random numbers\n  return Math.floor(Math.random() * 1000000000).toString(16) + '-' + new Date().getTime().toString(16);\n}\n\n// Function to get all users from local storage\nfunction getUsers() {\n  const data = localStorage.getItem(USERS_KEY);\n  return JSON.parse(data);\n}\n\n// Function to add a new user to local storage with a unique ID\nfunction addUser(newUser) {\n  const users = getUsers() || [];\n  newUser.id = generateUniqueId(); // Assign a unique ID to the new user\n  users.push(newUser);\n  localStorage.setItem(USERS_KEY, JSON.stringify(users));\n}\n\n// // Function to verify user credentials\n// function verifyUser(email, password) {\n//     const users = getUsers() || []; // Retrieve users from local storage\n//     console.log(\"verify email: \" + email);\n//     console.log(\"verify password: \" + password);\n\n//     // Find user by email\n//     const user = users.find((user) => user.email === email);\n\n//     // Verify if user exists and password matches\n//     if (user && user.password === password) {\n//       return user; // Return the user object if credentials are correct\n//     } else {\n//       return null; // Return null if credentials are incorrect\n//     }\n//   }\n\nconst logoutUser = () => {\n  localStorage.removeItem('isLoggedIn');\n  localStorage.removeItem('currentUser');\n};\nfunction deleteAccount(currentUser, logoutUser) {\n  const confirmDelete = window.confirm(\"Are you sure you want to delete your account?\");\n  if (confirmDelete) {\n    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    const updatedUsers = users.filter(user => user.email !== currentUser.email);\n    localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\n    logoutUser(); // Log the user out and redirect\n  }\n}\nfunction formatDate(joinDate) {\n  const date = new Date(joinDate);\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return date.toLocaleDateString('en-US', options);\n}\n\n// Function to initialize local storage with specials data if not already initialized\nfunction initSpecials() {\n  // Stop if data is already initialized\n  if (localStorage.getItem(SPECIALS_KEY) !== null) return;\n\n  // Initialize specials data with an empty array\n  const specials = [{\n    id: 1,\n    name: \"Apples\",\n    image: \"apple.png\",\n    price: 2.99,\n    description: \"Fresh organic apples from local farms.\",\n    quantity: 0\n  }, {\n    id: 2,\n    name: \"Spinach\",\n    image: \"spinach.png\",\n    price: 3.49,\n    description: \"Tender organic spinach leaves, perfect for salads.\",\n    quantity: 0\n  }, {\n    id: 3,\n    name: \"Freshly Baked Bread\",\n    image: \"bread.png\",\n    price: 4.99,\n    description: \"Warm and crusty artisan bread, straight from the oven.\",\n    quantity: 0\n  }, {\n    id: 4,\n    name: \"Handcrafted Soap\",\n    image: \"soap.png\",\n    price: 6.99,\n    description: \"Natural and moisturizing soap made with essential oils.\",\n    quantity: 0\n  }, {\n    id: 5,\n    name: \"Tomato Plant\",\n    image: \"tomatoes.png\",\n    price: 7.99,\n    description: \"Healthy and robust tomato plant for your garden.\",\n    quantity: 0\n  }, {\n    id: 6,\n    name: \"Free-Range Chicken\",\n    image: \"hen.png\",\n    price: 9.99,\n    description: \"Humanely raised and organic free-range chicken.\",\n    quantity: 0\n  }, {\n    id: 7,\n    name: \"Fresh Cookies\",\n    image: \"cookies.png\",\n    price: 3.99,\n    description: \"Soft and chewy cookies baked with organic ingredients.\",\n    quantity: 0\n  }, {\n    id: 9,\n    name: \"Herb Garden Kit\",\n    image: \"growing-plant.png\",\n    price: 12.99,\n    description: \"Complete kit for growing your own organic herbs at home.\",\n    quantity: 0\n  }, {\n    id: 10,\n    name: \"Grass-Fed Beef\",\n    image: \"beef-steak.png\",\n    price: 13.99,\n    description: \"Lean and flavorful grass-fed beef, perfect for grilling.\",\n    quantity: 0\n  }, {\n    id: 11,\n    name: \"Fresh Orange Juice\",\n    image: \"juice.png\",\n    price: 5.49,\n    description: \"Pure and refreshing orange juice, squeezed from ripe oranges.\",\n    quantity: 0\n  }, {\n    id: 12,\n    name: \"Flower Bouquet\",\n    image: \"flower.png\",\n    price: 8.99,\n    description: \"Beautiful and fragrant bouquet of fresh-cut flowers.\",\n    quantity: 0\n  }];\n  // Set data into local storage\n  localStorage.setItem(SPECIALS_KEY, JSON.stringify(specials));\n}\nexport { initUsers, getUsers, addUser, initSpecials, generateUniqueId, formatDate, logoutUser, deleteAccount };\n\n// --- Constants ----------------------------------------------------------------------------------\nconst API_HOST = \"http://localhost:4000\";\nconst USER_KEY = \"user\";\n\n// --- User ---------------------------------------------------------------------------------------\nasync function verifyUser(email, password) {\n  const response = await axios.get(API_HOST + \"/api/users/login\", {\n    params: {\n      email,\n      password\n    }\n  });\n  const user = response.data;\n\n  // NOTE: In this example the login is also persistent as it is stored in local storage.\n  if (user !== null) setUser(user);\n  return user;\n}\nasync function findUser(id) {\n  const response = await axios.get(API_HOST + `/api/users/select/${id}`);\n  return response.data;\n}\nasync function createUser(user) {\n  const response = await axios.post(API_HOST + \"/api/users\", user);\n  return response.data;\n}\n\n// --- Post ---------------------------------------------------------------------------------------\nasync function getPosts() {\n  const response = await axios.get(API_HOST + \"/api/posts\");\n  return response.data;\n}\nasync function createPost(post) {\n  const response = await axios.post(API_HOST + \"/api/posts\", post);\n  return response.data;\n}\n\n// --- Helper functions to interact with local storage --------------------------------------------\nfunction setUser(user) {\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n}\nfunction getUser() {\n  return JSON.parse(localStorage.getItem(USER_KEY));\n}\nfunction removeUser() {\n  localStorage.removeItem(USER_KEY);\n}\nexport { verifyUser, findUser, createUser, getPosts, createPost, getUser, removeUser };","map":{"version":3,"names":["axios","USERS_KEY","SPECIALS_KEY","initUsers","localStorage","getItem","users","id","generateUniqueId","name","email","password","joinDate","Date","toISOString","setItem","JSON","stringify","Math","floor","random","toString","getTime","getUsers","data","parse","addUser","newUser","push","logoutUser","removeItem","deleteAccount","currentUser","confirmDelete","window","confirm","updatedUsers","filter","user","formatDate","date","options","year","month","day","toLocaleDateString","initSpecials","specials","image","price","description","quantity","API_HOST","USER_KEY","verifyUser","response","get","params","setUser","findUser","createUser","post","getPosts","createPost","getUser","removeUser"],"sources":["/Users/isaackelsallnew/Documents/GitHub/FSD-A2/frontend/src/data/repository.js"],"sourcesContent":["import axios from \"axios\";\n\nconst USERS_KEY = \"users\";\nconst SPECIALS_KEY = \"specials\";\n\n// Function to initialize local storage with user data if not already initialized\nfunction initUsers() {\n  if (localStorage.getItem(USERS_KEY) !== null) return;\n\n  const users = [\n    {\n      id: generateUniqueId(), // New unique ID\n      name: \"Isaac\",\n      email: \"ik@gmail.com\",\n      password: \"Abcd1234!\",\n      joinDate: new Date().toISOString(),\n    },\n    {\n      id: generateUniqueId(), // New unique ID\n      name: \"Test\",\n      email: \"test@t.com\",\n      password: \"Testpassword1!\",\n      joinDate: new Date().toISOString(),\n    },\n  ];\n\n  localStorage.setItem(USERS_KEY, JSON.stringify(users));\n}\n\n// Helper function to generate a unique ID\nfunction generateUniqueId() {\n  // Use a simple approach to create unique IDs, such as UUIDs, timestamps, or random numbers\n  return (\n    Math.floor(Math.random() * 1000000000).toString(16) + \n    '-' +\n    new Date().getTime().toString(16)\n  );\n}\n\n// Function to get all users from local storage\nfunction getUsers() {\n  const data = localStorage.getItem(USERS_KEY);\n  return JSON.parse(data);\n}\n\n// Function to add a new user to local storage with a unique ID\nfunction addUser(newUser) {\n  const users = getUsers() || [];\n\n  newUser.id = generateUniqueId(); // Assign a unique ID to the new user\n  users.push(newUser);\n\n  localStorage.setItem(USERS_KEY, JSON.stringify(users));\n}\n\n\n// // Function to verify user credentials\n// function verifyUser(email, password) {\n//     const users = getUsers() || []; // Retrieve users from local storage\n//     console.log(\"verify email: \" + email);\n//     console.log(\"verify password: \" + password);\n  \n//     // Find user by email\n//     const user = users.find((user) => user.email === email);\n  \n//     // Verify if user exists and password matches\n//     if (user && user.password === password) {\n//       return user; // Return the user object if credentials are correct\n//     } else {\n//       return null; // Return null if credentials are incorrect\n//     }\n//   }\n\n  const logoutUser = () => {\n    localStorage.removeItem('isLoggedIn');\n    localStorage.removeItem('currentUser');\n  };\n\n  function deleteAccount(currentUser, logoutUser) {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete your account?\");\n    if (confirmDelete) {\n      const users = JSON.parse(localStorage.getItem(\"users\")) || [];\n      const updatedUsers = users.filter((user) => user.email !== currentUser.email);\n      localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\n      logoutUser(); // Log the user out and redirect\n    }\n  }\n\n  function formatDate(joinDate) {\n    const date = new Date(joinDate);\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString('en-US', options);\n  }\n\n  // Function to initialize local storage with specials data if not already initialized\nfunction initSpecials() {\n    // Stop if data is already initialized\n    if (localStorage.getItem(SPECIALS_KEY) !== null) \n      return;\n  \n    // Initialize specials data with an empty array\n    const specials = [\n    {\n      id: 1,\n      name: \"Apples\",\n      image: \"apple.png\",\n      price: 2.99,\n      description: \"Fresh organic apples from local farms.\",\n      quantity: 0\n    },\n    {\n      id: 2,\n      name: \"Spinach\",\n      image: \"spinach.png\",\n      price: 3.49,\n      description: \"Tender organic spinach leaves, perfect for salads.\",\n      quantity: 0\n    },\n    {\n      id: 3,\n      name: \"Freshly Baked Bread\",\n      image: \"bread.png\",\n      price: 4.99,\n      description: \"Warm and crusty artisan bread, straight from the oven.\",\n      quantity: 0\n    },\n    {\n      id: 4,\n      name: \"Handcrafted Soap\",\n      image: \"soap.png\",\n      price: 6.99,\n      description: \"Natural and moisturizing soap made with essential oils.\",\n      quantity: 0\n    },\n    {\n      id: 5,\n      name: \"Tomato Plant\",\n      image: \"tomatoes.png\",\n      price: 7.99,\n      description: \"Healthy and robust tomato plant for your garden.\",\n      quantity: 0\n    },\n    {\n      id: 6,\n      name: \"Free-Range Chicken\",\n      image: \"hen.png\",\n      price: 9.99,\n      description: \"Humanely raised and organic free-range chicken.\",\n      quantity: 0\n    },\n    {\n      id: 7,\n      name: \"Fresh Cookies\",\n      image: \"cookies.png\",\n      price: 3.99,\n      description: \"Soft and chewy cookies baked with organic ingredients.\",\n      quantity: 0\n    },\n    {\n      id: 9,\n      name: \"Herb Garden Kit\",\n      image: \"growing-plant.png\",\n      price: 12.99,\n      description: \"Complete kit for growing your own organic herbs at home.\",\n      quantity: 0\n    },\n    {\n      id: 10,\n      name: \"Grass-Fed Beef\",\n      image: \"beef-steak.png\",\n      price: 13.99,\n      description: \"Lean and flavorful grass-fed beef, perfect for grilling.\",\n      quantity: 0\n    },\n    {\n      id: 11,\n      name: \"Fresh Orange Juice\",\n      image: \"juice.png\",\n      price: 5.49,\n      description: \"Pure and refreshing orange juice, squeezed from ripe oranges.\",\n      quantity: 0\n    },\n    {\n      id: 12,\n      name: \"Flower Bouquet\",\n      image: \"flower.png\",\n      price: 8.99,\n      description: \"Beautiful and fragrant bouquet of fresh-cut flowers.\",\n      quantity: 0\n    },\n  ];\n  // Set data into local storage\n  localStorage.setItem(SPECIALS_KEY, JSON.stringify(specials));\n}\n\n\n\nexport { initUsers, getUsers, addUser, initSpecials, generateUniqueId, formatDate, logoutUser, deleteAccount };\n\n\n\n\n\n\n\n\n\n// --- Constants ----------------------------------------------------------------------------------\nconst API_HOST = \"http://localhost:4000\";\nconst USER_KEY = \"user\";\n\n// --- User ---------------------------------------------------------------------------------------\nasync function verifyUser(email, password) {\n  const response = await axios.get(API_HOST + \"/api/users/login\", { params: { email, password } });\n  const user = response.data;\n  \n  // NOTE: In this example the login is also persistent as it is stored in local storage.\n  if(user !== null)\n    setUser(user);\n\n  return user;\n}\n\nasync function findUser(id) {\n  const response = await axios.get(API_HOST + `/api/users/select/${id}`);\n\n  return response.data;\n}\n\nasync function createUser(user) {\n  const response = await axios.post(API_HOST + \"/api/users\", user);\n\n  return response.data;\n}\n\n// --- Post ---------------------------------------------------------------------------------------\nasync function getPosts() {\n  const response = await axios.get(API_HOST + \"/api/posts\");\n\n  return response.data;\n}\n\nasync function createPost(post) {\n  const response = await axios.post(API_HOST + \"/api/posts\", post);\n\n  return response.data;\n}\n\n// --- Helper functions to interact with local storage --------------------------------------------\nfunction setUser(user) {\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n}\n\nfunction getUser() {\n  return JSON.parse(localStorage.getItem(USER_KEY));\n}\n\nfunction removeUser() {\n  localStorage.removeItem(USER_KEY);\n}\n\nexport {\n  verifyUser, findUser, createUser,\n  getPosts, createPost,\n  getUser, removeUser\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}