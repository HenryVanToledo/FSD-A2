{"ast":null,"code":"import axios from \"axios\";\n\n// --- Constants ----------------------------------------------------------------------------------\nconst API_HOST = \"http://localhost:4000\";\nconst USER_KEY = \"user\";\n\n// --- User ---------------------------------------------------------------------------------------\nasync function verifyUser(email, password) {\n  const response = await axios.get(API_HOST + \"/api/users/login\", {\n    params: {\n      email,\n      password\n    }\n  });\n  const user = response.data;\n\n  // NOTE: In this example the login is also persistent as it is stored in local storage.\n  if (user !== null) setUser(user);\n  return user;\n}\nasync function findUser(id) {\n  const response = await axios.get(API_HOST + `/api/users/select/${id}`);\n  return response.data;\n}\nasync function createUser(user) {\n  const response = await axios.post(API_HOST + \"/api/users\", user);\n  return response.data;\n}\n\n// --- Post ---------------------------------------------------------------------------------------\nasync function getPosts() {\n  const response = await axios.get(API_HOST + \"/api/posts\");\n  return response.data;\n}\nasync function createPost(post) {\n  const response = await axios.post(API_HOST + \"/api/posts\", post);\n  return response.data;\n}\n\n// --- Helper functions to interact with local storage --------------------------------------------\nfunction setUser(user) {\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n}\nfunction getUser() {\n  return JSON.parse(localStorage.getItem(USER_KEY));\n}\nfunction removeUser() {\n  localStorage.removeItem(USER_KEY);\n}\nexport { verifyUser, findUser, createUser, getPosts, createPost, getUser, removeUser };","map":{"version":3,"names":["axios","API_HOST","USER_KEY","verifyUser","email","password","response","get","params","user","data","setUser","findUser","id","createUser","post","getPosts","createPost","localStorage","setItem","JSON","stringify","getUser","parse","getItem","removeUser","removeItem"],"sources":["/Users/isaackelsallnew/Documents/GitHub/FSD-A2/frontend/src/data/repository.js"],"sourcesContent":["import axios from \"axios\";\n\n// --- Constants ----------------------------------------------------------------------------------\nconst API_HOST = \"http://localhost:4000\";\nconst USER_KEY = \"user\";\n\n// --- User ---------------------------------------------------------------------------------------\nasync function verifyUser(email, password) {\n  const response = await axios.get(API_HOST + \"/api/users/login\", { params: { email, password } });\n  const user = response.data;\n  \n  // NOTE: In this example the login is also persistent as it is stored in local storage.\n  if(user !== null)\n    setUser(user);\n\n  return user;\n}\n\nasync function findUser(id) {\n  const response = await axios.get(API_HOST + `/api/users/select/${id}`);\n\n  return response.data;\n}\n\nasync function createUser(user) {\n  const response = await axios.post(API_HOST + \"/api/users\", user);\n\n  return response.data;\n}\n\n// --- Post ---------------------------------------------------------------------------------------\nasync function getPosts() {\n  const response = await axios.get(API_HOST + \"/api/posts\");\n\n  return response.data;\n}\n\nasync function createPost(post) {\n  const response = await axios.post(API_HOST + \"/api/posts\", post);\n\n  return response.data;\n}\n\n// --- Helper functions to interact with local storage --------------------------------------------\nfunction setUser(user) {\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n}\n\nfunction getUser() {\n  return JSON.parse(localStorage.getItem(USER_KEY));\n}\n\nfunction removeUser() {\n  localStorage.removeItem(USER_KEY);\n}\n\nexport {\n  verifyUser, findUser, createUser,\n  getPosts, createPost,\n  getUser, removeUser\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,uBAAuB;AACxC,MAAMC,QAAQ,GAAG,MAAM;;AAEvB;AACA,eAAeC,UAAUA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACzC,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACN,QAAQ,GAAG,kBAAkB,EAAE;IAAEO,MAAM,EAAE;MAAEJ,KAAK;MAAEC;IAAS;EAAE,CAAC,CAAC;EAChG,MAAMI,IAAI,GAAGH,QAAQ,CAACI,IAAI;;EAE1B;EACA,IAAGD,IAAI,KAAK,IAAI,EACdE,OAAO,CAACF,IAAI,CAAC;EAEf,OAAOA,IAAI;AACb;AAEA,eAAeG,QAAQA,CAACC,EAAE,EAAE;EAC1B,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACN,QAAQ,GAAI,qBAAoBY,EAAG,EAAC,CAAC;EAEtE,OAAOP,QAAQ,CAACI,IAAI;AACtB;AAEA,eAAeI,UAAUA,CAACL,IAAI,EAAE;EAC9B,MAAMH,QAAQ,GAAG,MAAMN,KAAK,CAACe,IAAI,CAACd,QAAQ,GAAG,YAAY,EAAEQ,IAAI,CAAC;EAEhE,OAAOH,QAAQ,CAACI,IAAI;AACtB;;AAEA;AACA,eAAeM,QAAQA,CAAA,EAAG;EACxB,MAAMV,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACN,QAAQ,GAAG,YAAY,CAAC;EAEzD,OAAOK,QAAQ,CAACI,IAAI;AACtB;AAEA,eAAeO,UAAUA,CAACF,IAAI,EAAE;EAC9B,MAAMT,QAAQ,GAAG,MAAMN,KAAK,CAACe,IAAI,CAACd,QAAQ,GAAG,YAAY,EAAEc,IAAI,CAAC;EAEhE,OAAOT,QAAQ,CAACI,IAAI;AACtB;;AAEA;AACA,SAASC,OAAOA,CAACF,IAAI,EAAE;EACrBS,YAAY,CAACC,OAAO,CAACjB,QAAQ,EAAEkB,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,CAAC;AACtD;AAEA,SAASa,OAAOA,CAAA,EAAG;EACjB,OAAOF,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAACtB,QAAQ,CAAC,CAAC;AACnD;AAEA,SAASuB,UAAUA,CAAA,EAAG;EACpBP,YAAY,CAACQ,UAAU,CAACxB,QAAQ,CAAC;AACnC;AAEA,SACEC,UAAU,EAAES,QAAQ,EAAEE,UAAU,EAChCE,QAAQ,EAAEC,UAAU,EACpBK,OAAO,EAAEG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}