{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Business\\\\Wabi\\\\FSD-A2\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { UserContext } from '../context/UserContext';\n\n// Create CartContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n// CartContext Provider component\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState(null);\n  const {\n    user\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetchCart();\n  }, []);\n\n  // Fetch the cart data from the backend\n  const fetchCart = async () => {\n    try {\n      ///////////////////////////\n      ///////////// VERIFY\n      ///////////////////////////\n      const userId = user.userId;\n      const cartId = userId;\n      const response = await axios.get(`http://localhost:4000/api/cart/${cartId}`);\n      setCart(response.data);\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    }\n  };\n\n  // Add product to cart\n  const addToCart = async (productId, quantity) => {\n    try {\n      ///////////////////////////\n      ///////////// VERIFY\n      ///////////////////////////\n      const userId = 1; //UPDATE THIS TO FETCH USER ID\n      await axios.post('http://localhost:4000/api/cart/add', {\n        userId,\n        productId,\n        quantity\n      });\n      // Refetch the cart after adding the product\n      fetchCart();\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n\n  // Update product quantity in cart\n  const updateCartItem = async (cartLineId, quantity) => {\n    try {\n      await axios.put('http://localhost:4000/api/cart/update', {\n        cartLineId,\n        quantity\n      });\n      // Refetch the cart after updating the quantity\n      fetchCart();\n    } catch (error) {\n      console.error('Error updating cart item:', error);\n    }\n  };\n\n  // Increase product quantity in cart\n  const increaseQuantity = async productId => {\n    const cartLine = cart.cartLines.find(line => line.productId === productId);\n    if (cartLine) {\n      updateCartItem(cartLine.cartLineId, cartLine.quantity + 1);\n    } else {\n      console.error('Cart line not found');\n    }\n  };\n\n  // Decrease product quantity in cart \n  const decreaseQuantity = async productId => {\n    const cartLine = cart.cartLines.find(line => line.productId === productId);\n    if (cartLine && cartLine.quantity > 1) {\n      updateCartItem(cartLine.cartLineId, cartLine.quantity - 1);\n    } else {\n      removeFromCart(cartLine.cartLineId);\n    }\n  };\n\n  // Remove product from cart\n  const removeFromCart = async cartLineId => {\n    try {\n      await axios.delete(`http://localhost:4000/api/cart/remove/${cartLineId}`);\n      // Refetch the cart after removing the product\n      fetchCart();\n    } catch (error) {\n      console.error('Error removing from cart:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      fetchCart,\n      addToCart,\n      removeFromCart,\n      increaseQuantity,\n      decreaseQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"bdZEYOAIa04DjttN/A1rccSROpc=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","UserContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","user","fetchCart","userId","cartId","response","get","data","error","console","addToCart","productId","quantity","post","updateCartItem","cartLineId","put","increaseQuantity","cartLine","cartLines","find","line","decreaseQuantity","removeFromCart","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\n\r\n// Create CartContext\r\nexport const CartContext = createContext();\r\n\r\n// CartContext Provider component\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState(null);\r\n  const { user } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    fetchCart();\r\n  }, []);\r\n\r\n  // Fetch the cart data from the backend\r\n  const fetchCart = async () => {\r\n    try {\r\n\r\n      ///////////////////////////\r\n      ///////////// VERIFY\r\n      ///////////////////////////\r\n      const userId = user.userId;\r\n      const cartId = userId\r\n      const response = await axios.get(`http://localhost:4000/api/cart/${cartId}`);\r\n      setCart(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching cart:', error);\r\n    }\r\n  };\r\n\r\n  // Add product to cart\r\n  const addToCart = async (productId, quantity) => {\r\n    try {\r\n\r\n      ///////////////////////////\r\n      ///////////// VERIFY\r\n      ///////////////////////////\r\n      const userId = 1; //UPDATE THIS TO FETCH USER ID\r\n      await axios.post('http://localhost:4000/api/cart/add', { userId, productId, quantity });\r\n      // Refetch the cart after adding the product\r\n      fetchCart();\r\n    } catch (error) {\r\n      console.error('Error adding to cart:', error);\r\n    }\r\n  };\r\n\r\n  // Update product quantity in cart\r\n  const updateCartItem = async (cartLineId, quantity) => {\r\n    try {\r\n      await axios.put('http://localhost:4000/api/cart/update', { cartLineId, quantity });\r\n      // Refetch the cart after updating the quantity\r\n      fetchCart();\r\n    } catch (error) {\r\n      console.error('Error updating cart item:', error);\r\n    }\r\n  };\r\n\r\n  // Increase product quantity in cart\r\n  const increaseQuantity = async (productId) => {\r\n    const cartLine = cart.cartLines.find(line => line.productId === productId);\r\n    if (cartLine) {\r\n      updateCartItem(cartLine.cartLineId, cartLine.quantity + 1);\r\n    } else {\r\n      console.error('Cart line not found');\r\n    }\r\n  }\r\n\r\n  // Decrease product quantity in cart \r\n  const decreaseQuantity = async (productId) => {\r\n    const cartLine = cart.cartLines.find(line => line.productId === productId);\r\n    if (cartLine && cartLine.quantity > 1) {\r\n      updateCartItem(cartLine.cartLineId, cartLine.quantity - 1);\r\n    } else {\r\n      removeFromCart(cartLine.cartLineId);}\r\n  }\r\n\r\n  // Remove product from cart\r\n  const removeFromCart = async (cartLineId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:4000/api/cart/remove/${cartLineId}`);\r\n      // Refetch the cart after removing the product\r\n      fetchCart();\r\n    } catch (error) {\r\n      console.error('Error removing from cart:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, fetchCart, addToCart, removeFromCart, increaseQuantity, decreaseQuantity }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}