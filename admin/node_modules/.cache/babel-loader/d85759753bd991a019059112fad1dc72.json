{"ast":null,"code":"import { gql } from \"@apollo/client\";\nimport client from \"../apollo/client\"; // Define the GraphQL queries and mutations\n\nconst GET_USERS = gql`\n  query GetUsers {\n    users {\n      userId\n      username\n      blocked\n    }\n  }\n`;\nconst BLOCK_UNBLOCK_USER = gql`\n  mutation BlockUnblockUser($userId: ID!, $block: Boolean!) {\n    blockUnblockUser(userId: $userId, block: $block) {\n      userId\n      username\n      blocked\n    }\n  }\n`; // Function to get all users\n\nexport const getUsers = async () => {\n  console.log(\"Fetching users...\");\n\n  try {\n    consol;\n    const {\n      data\n    } = await client.query({\n      query: GET_USERS\n    });\n    console.log(\"Users fetched:\", data.users);\n    return data.users;\n  } catch (error) {\n    console.error(\"Error fetching users:\", error);\n    throw error;\n  }\n}; // Function to block or unblock a user\n\nexport const blockUnblockUser = async (userId, block) => {\n  console.log(`Updating user block status: ${userId}, Block: ${block}`);\n\n  try {\n    const {\n      data\n    } = await client.mutate({\n      mutation: BLOCK_UNBLOCK_USER,\n      variables: {\n        userId,\n        block\n      }\n    });\n    console.log(\"User block status updated:\", data.blockUnblockUser);\n    return data.blockUnblockUser;\n  } catch (error) {\n    console.error(\"Error updating user block status:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["gql","client","GET_USERS","BLOCK_UNBLOCK_USER","getUsers","console","log","consol","data","query","users","error","blockUnblockUser","userId","block","mutate","mutation","variables"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/admin/src/data/repository.js"],"sourcesContent":["import { gql } from \"@apollo/client\";\r\nimport client from \"../apollo/client\";\r\n\r\n// Define the GraphQL queries and mutations\r\nconst GET_USERS = gql`\r\n  query GetUsers {\r\n    users {\r\n      userId\r\n      username\r\n      blocked\r\n    }\r\n  }\r\n`;\r\n\r\nconst BLOCK_UNBLOCK_USER = gql`\r\n  mutation BlockUnblockUser($userId: ID!, $block: Boolean!) {\r\n    blockUnblockUser(userId: $userId, block: $block) {\r\n      userId\r\n      username\r\n      blocked\r\n    }\r\n  }\r\n`;\r\n\r\n// Function to get all users\r\nexport const getUsers = async () => {\r\n  console.log(\"Fetching users...\");\r\n  try {\r\n    consol\r\n    const { data } = await\r\n    client.query({ query: GET_USERS });\r\n    console.log(\"Users fetched:\", data.users);\r\n    return data.users;\r\n  }\r\n  catch (error) {\r\n    console.error(\"Error fetching users:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to block or unblock a user\r\nexport const blockUnblockUser = async (userId, block) => {\r\n  console.log(`Updating user block status: ${userId}, Block: ${block}`);\r\n  try {\r\n    const { data } = await client.mutate({\r\n      mutation: BLOCK_UNBLOCK_USER,\r\n      variables: { userId, block }\r\n    });\r\n    console.log(\"User block status updated:\", data.blockUnblockUser);\r\n    return data.blockUnblockUser;\r\n  } catch (error) {\r\n    console.error(\"Error updating user block status:\", error);\r\n    throw error; \r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAEA;;AACA,MAAMC,SAAS,GAAGF,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMG,kBAAkB,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CAUA;;AACA,OAAO,MAAMI,QAAQ,GAAG,YAAY;EAClCC,OAAO,CAACC,GAAR,CAAY,mBAAZ;;EACA,IAAI;IACFC,MAAM;IACN,MAAM;MAAEC;IAAF,IAAW,MACjBP,MAAM,CAACQ,KAAP,CAAa;MAAEA,KAAK,EAAEP;IAAT,CAAb,CADA;IAEAG,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,IAAI,CAACE,KAAnC;IACA,OAAOF,IAAI,CAACE,KAAZ;EACD,CAND,CAOA,OAAOC,KAAP,EAAc;IACZN,OAAO,CAACM,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;IACA,MAAMA,KAAN;EACD;AACF,CAbM,C,CAeP;;AACA,OAAO,MAAMC,gBAAgB,GAAG,OAAOC,MAAP,EAAeC,KAAf,KAAyB;EACvDT,OAAO,CAACC,GAAR,CAAa,+BAA8BO,MAAO,YAAWC,KAAM,EAAnE;;EACA,IAAI;IACF,MAAM;MAAEN;IAAF,IAAW,MAAMP,MAAM,CAACc,MAAP,CAAc;MACnCC,QAAQ,EAAEb,kBADyB;MAEnCc,SAAS,EAAE;QAAEJ,MAAF;QAAUC;MAAV;IAFwB,CAAd,CAAvB;IAIAT,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CE,IAAI,CAACI,gBAA/C;IACA,OAAOJ,IAAI,CAACI,gBAAZ;EACD,CAPD,CAOE,OAAOD,KAAP,EAAc;IACdN,OAAO,CAACM,KAAR,CAAc,mCAAd,EAAmDA,KAAnD;IACA,MAAMA,KAAN;EACD;AACF,CAbM"},"metadata":{},"sourceType":"module"}