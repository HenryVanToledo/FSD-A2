{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Business\\\\Wabi\\\\FSD-A2\\\\admin\\\\src\\\\pages\\\\admin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport gql from \"graphql-tag\";\nimport MessageContext from \"../contexts/MessageContext.js\";\nimport { getComments, createComment } from \"../data/repository.js\";\nimport client from \"../apollo/client.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comments() {\n  _s();\n\n  const [comment, setComment] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [comments, setComments] = useState([]);\n  const {\n    setMessage\n  } = useContext(MessageContext); // Load comments.\n\n  useEffect(() => {\n    async function loadComments() {\n      const currentComments = await getComments();\n      setComments(currentComments);\n    }\n\n    loadComments();\n  }, []); // Setup subscription.\n\n  useEffect(() => {\n    // Subscripe to the GraphQL comment_added subscription.\n    const subscription = client.subscribe({\n      query: gql`\n        subscription {\n          comment_added {\n            id,\n            content\n          }\n        }`\n    }).subscribe({\n      next: payload => {\n        const newComment = payload.data.comment_added; // Ignore the new comment if it already exists.\n\n        for (const x of comments) {\n          if (newComment.id === x.id) return;\n        } // Add new comment.\n\n\n        setComments([...comments, newComment]); // Set message.\n\n        setMessage( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Comment with \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"ID \", newComment.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 35\n          }, this), \" created.\"]\n        }, void 0, true));\n      }\n    }); // Unsubscripe from the subscription when the effect unmounts.\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [comments, setMessage]);\n\n  const handleInputChange = event => {\n    setComment(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // Trim the comment text.\n\n    const commentTrimmed = comment.trim();\n\n    if (commentTrimmed === \"\") {\n      setErrorMessage(\"A comment cannot be empty.\");\n      return;\n    } // Create comment.\n\n\n    const newComment = await createComment(commentTrimmed); // Update comments.\n\n    setComments([...comments, newComment]); // Set message.\n\n    setMessage( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Comment with \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"ID \", newComment.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 31\n      }, this), \" created.\"]\n    }, void 0, true)); // Reset comment content.\n\n    setComment(\"\");\n    setErrorMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"New Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"comment\",\n            id: \"comment\",\n            className: \"form-control\",\n            rows: \"3\",\n            value: comment,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), errorMessage !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            className: \"btn btn-danger mr-5\",\n            value: \"Cancel\",\n            onClick: () => {\n              setComment(\"\");\n              setErrorMessage(null);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            value: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-muted\",\n        children: \"No comments have been submitted.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : comments.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border my-3 p-3\",\n        style: {\n          whiteSpace: \"pre-wrap\"\n        },\n        children: x.content\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comments, \"1KFjvvIHnHIH+sLelVrsg38CFx8=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useContext","useEffect","gql","MessageContext","getComments","createComment","client","Comments","comment","setComment","errorMessage","setErrorMessage","comments","setComments","setMessage","loadComments","currentComments","subscription","subscribe","query","next","payload","newComment","data","comment_added","x","id","unsubscribe","handleInputChange","event","target","value","handleSubmit","preventDefault","commentTrimmed","trim","length","map","whiteSpace","content"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/admin/src/pages/admin.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport MessageContext from \"../contexts/MessageContext.js\";\r\nimport { getComments, createComment } from \"../data/repository.js\";\r\nimport client from \"../apollo/client.js\";\r\n\r\nexport default function Comments() {\r\n  const [comment, setComment] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const { setMessage } = useContext(MessageContext);\r\n\r\n  // Load comments.\r\n  useEffect(() => {\r\n    async function loadComments() {\r\n      const currentComments = await getComments();\r\n\r\n      setComments(currentComments);\r\n    }\r\n    loadComments();\r\n  }, []);\r\n\r\n  // Setup subscription.\r\n  useEffect(() => {\r\n    // Subscripe to the GraphQL comment_added subscription.\r\n    const subscription = client.subscribe({\r\n      query: gql`\r\n        subscription {\r\n          comment_added {\r\n            id,\r\n            content\r\n          }\r\n        }`\r\n    }).subscribe({\r\n      next: (payload) => {\r\n        const newComment = payload.data.comment_added;\r\n\r\n        // Ignore the new comment if it already exists.\r\n        for(const x of comments) {\r\n          if(newComment.id === x.id)\r\n            return;\r\n        }\r\n\r\n        // Add new comment.\r\n        setComments([...comments, newComment]);\r\n\r\n        // Set message.\r\n        setMessage(<>Comment with <strong>ID {newComment.id}</strong> created.</>);\r\n      }\r\n    });\r\n\r\n    // Unsubscripe from the subscription when the effect unmounts.\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [comments, setMessage]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setComment(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Trim the comment text.\r\n    const commentTrimmed = comment.trim();\r\n\r\n    if(commentTrimmed === \"\") {\r\n      setErrorMessage(\"A comment cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    // Create comment.\r\n    const newComment = await createComment(commentTrimmed);\r\n\r\n    // Update comments.\r\n    setComments([...comments, newComment]);\r\n\r\n    // Set message.\r\n    setMessage(<>Comment with <strong>ID {newComment.id}</strong> created.</>);\r\n\r\n    // Reset comment content.\r\n    setComment(\"\");\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <fieldset>\r\n          <legend>New Comment</legend>\r\n          <div className=\"form-group\">\r\n            <textarea name=\"comment\" id=\"comment\" className=\"form-control\" rows=\"3\"\r\n              value={comment} onChange={handleInputChange} />\r\n          </div>\r\n          {errorMessage !== null &&\r\n            <div className=\"form-group\">\r\n              <span className=\"text-danger\">{errorMessage}</span>\r\n            </div>\r\n          }\r\n          <div className=\"form-group\">\r\n            <input type=\"button\" className=\"btn btn-danger mr-5\" value=\"Cancel\"\r\n              onClick={() => { setComment(\"\"); setErrorMessage(null); }} />\r\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Comment\" />\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n\r\n      <hr />\r\n      <h1>Comments</h1>\r\n      <div>\r\n        {comments.length === 0 ?\r\n          <span className=\"text-muted\">No comments have been submitted.</span>\r\n          :\r\n          comments.map((x) =>\r\n            <div key={x.id} className=\"border my-3 p-3\" style={{ whiteSpace: \"pre-wrap\" }}>{x.content}</div>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}