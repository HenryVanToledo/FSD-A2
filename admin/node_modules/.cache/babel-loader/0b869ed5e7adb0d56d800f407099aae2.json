{"ast":null,"code":"import { request, gql } from \"graphql-request\"; // --- Constants ----------------------------------------------------------------------------------\n\nconst GRAPH_QL_URL = \"http://localhost:4000/graphql\"; // --- Comments -----------------------------------------------------------------------------------\n// async function getComments() {\n//   const query = gql`\n//     {\n//       comments {\n//         id,\n//         content\n//       }\n//     }\n//   `;\n//   const data = await request(GRAPH_QL_URL, query);\n//   return data.comments;\n// }\n// async function createComment(content) {\n//   const query = gql`\n//     mutation ($content: String!) {\n//       create_comment(content: $content) {\n//         id,\n//         content\n//       }\n//     }\n//   `;\n//   const variables = { content };\n//   const data = await request(GRAPH_QL_URL, query, variables);\n//   return data.create_comment;\n// }\n// export {\n//   getComments, createComment\n// }\n// GraphQL query to fetch users\n\nconst GET_USERS = gql`\n    query {\n      users {\n        id\n        username\n        blocked\n      }\n    }\n  `; // GraphQL mutation to block/unblock a user\n\nconst BLOCK_UNBLOCK_USER = gql`\n  mutation BlockUnblockUser($userId: ID!, $block: Boolean!) {\n    blockUnblockUser(userId: $userId, block: $block) {\n      id\n      username\n      blocked\n    }\n  }\n`;","map":{"version":3,"names":["request","gql","GRAPH_QL_URL","GET_USERS","BLOCK_UNBLOCK_USER"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/admin/src/data/repository.js"],"sourcesContent":["import { request, gql } from \"graphql-request\";\r\n\r\n// --- Constants ----------------------------------------------------------------------------------\r\nconst GRAPH_QL_URL = \"http://localhost:4000/graphql\";\r\n\r\n// --- Comments -----------------------------------------------------------------------------------\r\n// async function getComments() {\r\n//   const query = gql`\r\n//     {\r\n//       comments {\r\n//         id,\r\n//         content\r\n//       }\r\n//     }\r\n//   `;\r\n\r\n//   const data = await request(GRAPH_QL_URL, query);\r\n\r\n//   return data.comments;\r\n// }\r\n\r\n// async function createComment(content) {\r\n//   const query = gql`\r\n//     mutation ($content: String!) {\r\n//       create_comment(content: $content) {\r\n//         id,\r\n//         content\r\n//       }\r\n//     }\r\n//   `;\r\n\r\n//   const variables = { content };\r\n\r\n//   const data = await request(GRAPH_QL_URL, query, variables);\r\n\r\n//   return data.create_comment;\r\n// }\r\n\r\n// export {\r\n//   getComments, createComment\r\n// }\r\n\r\n\r\n// GraphQL query to fetch users\r\n\r\nconst GET_USERS = gql`\r\n    query {\r\n      users {\r\n        id\r\n        username\r\n        blocked\r\n      }\r\n    }\r\n  `;\r\n\r\n// GraphQL mutation to block/unblock a user\r\nconst BLOCK_UNBLOCK_USER = gql`\r\n  mutation BlockUnblockUser($userId: ID!, $block: Boolean!) {\r\n    blockUnblockUser(userId: $userId, block: $block) {\r\n      id\r\n      username\r\n      blocked\r\n    }\r\n  }\r\n`;\r\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,GAAlB,QAA6B,iBAA7B,C,CAEA;;AACA,MAAMC,YAAY,GAAG,+BAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAGA;;AAEA,MAAMC,SAAS,GAAGF,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARA,C,CAUA;;AACA,MAAMG,kBAAkB,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA"},"metadata":{},"sourceType":"module"}