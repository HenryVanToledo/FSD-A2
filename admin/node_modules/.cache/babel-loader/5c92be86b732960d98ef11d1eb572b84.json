{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Business\\\\Wabi\\\\FSD-A2\\\\admin\\\\src\\\\pages\\\\users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport MessageContext from \"../contexts/AdminContext.js\";\nimport { getUsers, blockUnblockUser } from \"../data/repository.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Users() {\n  _s();\n\n  const {\n    setMessage\n  } = useContext(MessageContext);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function loadUsers() {\n      try {\n        const users = await getUsers();\n        setUsers(users);\n      } catch (err) {\n        console.error(\"Error loading users:\", err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadUsers();\n  }, []);\n\n  const handleBlockUnblock = async (userId, block) => {\n    try {\n      await blockUnblockUser(userId, block);\n      setMessage( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"User with \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"ID \", userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 30\n        }, this), \" has been \", block ? \"blocked\" : \"unblocked\", \".\"]\n      }, void 0, true)); // Update user state\n\n      setUsers(users.map(user => user.id === userId ? { ...user,\n        blocked: block\n      } : user));\n    } catch (err) {\n      console.error(\"Error blocking/unblocking user:\", err);\n      setMessage( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: \"Error blocking/unblocking user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this));\n    }\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this); // Enhanced error handling to inspect and log the error object\n\n  if (error) {\n    console.error('Error details:', error);\n    const errorMessage = error.message || 'An unknown error occurred';\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error loading users: \", errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-muted\",\n        children: \"No users found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border my-3 p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", user.blocked ? \"Blocked\" : \"Active\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${user.blocked ? \"btn-success\" : \"btn-danger\"}`,\n          onClick: () => handleBlockUnblock(user.id, !user.blocked),\n          children: user.blocked ? \"Unblock\" : \"Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Users, \"GGWoQGIrXPH59q2Z331pQRu7qIE=\");\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useContext","useEffect","MessageContext","getUsers","blockUnblockUser","Users","setMessage","users","setUsers","loading","setLoading","error","setError","loadUsers","err","console","handleBlockUnblock","userId","block","map","user","id","blocked","errorMessage","message","length","username"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/admin/src/pages/users.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport MessageContext from \"../contexts/AdminContext.js\";\r\nimport { getUsers, blockUnblockUser } from \"../data/repository.js\";\r\n\r\nexport default function Users() {\r\n  const { setMessage } = useContext(MessageContext);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function loadUsers() {\r\n      try {\r\n        const users = await getUsers();\r\n        setUsers(users);\r\n      } catch (err) {\r\n        console.error(\"Error loading users:\", err);\r\n        setError(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const handleBlockUnblock = async (userId, block) => {\r\n    try {\r\n      await blockUnblockUser(userId, block);\r\n      setMessage(<>User with <strong>ID {userId}</strong> has been {block ? \"blocked\" : \"unblocked\"}.</>);\r\n\r\n      // Update user state\r\n      setUsers(users.map(user => \r\n        user.id === userId ? { ...user, blocked: block } : user\r\n      ));\r\n    } catch (err) {\r\n      console.error(\"Error blocking/unblocking user:\", err);\r\n      setMessage(<span className=\"text-danger\">Error blocking/unblocking user</span>);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  // Enhanced error handling to inspect and log the error object\r\n  if (error) {\r\n    console.error('Error details:', error);\r\n    const errorMessage = error.message || 'An unknown error occurred';\r\n    return <p>Error loading users: {errorMessage}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      <div>\r\n        {users.length === 0 ?\r\n          <span className=\"text-muted\">No users found.</span>\r\n          :\r\n          users.map((user) =>\r\n            <div key={user.id} className=\"border my-3 p-3\">\r\n              <p>{user.username}</p>\r\n              <p>Status: {user.blocked ? \"Blocked\" : \"Active\"}</p>\r\n              <button\r\n                className={`btn ${user.blocked ? \"btn-success\" : \"btn-danger\"}`}\r\n                onClick={() => handleBlockUnblock(user.id, !user.blocked)}\r\n              >\r\n                {user.blocked ? \"Unblock\" : \"Block\"}\r\n              </button>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}