{"ast":null,"code":"import { request, gql } from \"@apollo/client\";\nimport client from \"../apollo/client\";\nconst GRAPH_QL_URL = \"http://localhost:4000/graphql\"; // GraphQL query to fetch users\n\nconst GET_USERS = gql`\n  query {\n    users {\n      id\n      username\n      blocked\n    }\n  }\n`; // GraphQL mutation to block/unblock a user\n\nconst BLOCK_UNBLOCK_USER = gql`\n  mutation BlockUnblockUser($userId: ID!, $block: Boolean!) {\n    blockUnblockUser(userId: $userId, block: $block) {\n      id\n      username\n      blocked\n    }\n  }\n`; // Function to fetch users\n\nexport const getUsers = async () => {\n  const {\n    data\n  } = await client.query({\n    query: GET_USERS\n  });\n  return data.users;\n}; // Function to block/unblock a user\n\nexport const blockUnblockUser = async (userId, block) => {\n  const {\n    data\n  } = await client.mutate({\n    mutation: BLOCK_UNBLOCK_USER,\n    variables: {\n      userId,\n      block\n    }\n  });\n  return data.blockUnblockUser;\n};","map":{"version":3,"names":["request","gql","client","GRAPH_QL_URL","GET_USERS","BLOCK_UNBLOCK_USER","getUsers","data","query","users","blockUnblockUser","userId","block","mutate","mutation","variables"],"sources":["C:/xampp/htdocs/Business/Wabi/FSD-A2/admin/src/data/repository.js"],"sourcesContent":["import { request, gql } from \"@apollo/client\";\r\nimport client from \"../apollo/client\";\r\n\r\nconst GRAPH_QL_URL = \"http://localhost:4000/graphql\";\r\n\r\n// GraphQL query to fetch users\r\nconst GET_USERS = gql`\r\n  query {\r\n    users {\r\n      id\r\n      username\r\n      blocked\r\n    }\r\n  }\r\n`;\r\n\r\n// GraphQL mutation to block/unblock a user\r\nconst BLOCK_UNBLOCK_USER = gql`\r\n  mutation BlockUnblockUser($userId: ID!, $block: Boolean!) {\r\n    blockUnblockUser(userId: $userId, block: $block) {\r\n      id\r\n      username\r\n      blocked\r\n    }\r\n  }\r\n`;\r\n\r\n// Function to fetch users\r\nexport const getUsers = async () => {\r\n  const { data } = await client.query({\r\n    query: GET_USERS\r\n  });\r\n  return data.users;\r\n};\r\n\r\n// Function to block/unblock a user\r\nexport const blockUnblockUser = async (userId, block) => {\r\n  const { data } = await client.mutate({\r\n    mutation: BLOCK_UNBLOCK_USER,\r\n    variables: { userId, block }\r\n  });\r\n  return data.blockUnblockUser;\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,GAAlB,QAA6B,gBAA7B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,MAAMC,YAAY,GAAG,+BAArB,C,CAEA;;AACA,MAAMC,SAAS,GAAGH,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CAUA;;AACA,MAAMI,kBAAkB,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CAUA;;AACA,OAAO,MAAMK,QAAQ,GAAG,YAAY;EAClC,MAAM;IAAEC;EAAF,IAAW,MAAML,MAAM,CAACM,KAAP,CAAa;IAClCA,KAAK,EAAEJ;EAD2B,CAAb,CAAvB;EAGA,OAAOG,IAAI,CAACE,KAAZ;AACD,CALM,C,CAOP;;AACA,OAAO,MAAMC,gBAAgB,GAAG,OAAOC,MAAP,EAAeC,KAAf,KAAyB;EACvD,MAAM;IAAEL;EAAF,IAAW,MAAML,MAAM,CAACW,MAAP,CAAc;IACnCC,QAAQ,EAAET,kBADyB;IAEnCU,SAAS,EAAE;MAAEJ,MAAF;MAAUC;IAAV;EAFwB,CAAd,CAAvB;EAIA,OAAOL,IAAI,CAACG,gBAAZ;AACD,CANM"},"metadata":{},"sourceType":"module"}